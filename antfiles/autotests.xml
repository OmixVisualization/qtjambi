<!--
    TODO:
    - We work the target names into "tests.*" namespace "compile.java" => "tests.compile.java".
-->
<project default="all" basedir=".">

    <target name="load-properties">
        <property environment="env"/>

        <tstamp/>
        <condition property="test.includes" value="${test}" else="*">
            <and>
                <isset property="test"/>
                <not>
                    <equals arg1="${test}" arg2=""/>
                </not>
            </and>
        </condition>
        <fileset id="qtjambi.autotest.classes" dir="${java.srcdir}/autotests">
            <include name="io/qt/**/Test${test.includes}.java"/>
            <exclude name="io/qt/**/Test*Qt5.java" unless="${qtjambi.isqt5}"/>
            <exclude name="io/qt/**/Test*Qt6.java" unless="${qtjambi.isqt6}"/>
            <exclude name="io/qt/**/Test*Qml.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/Test*ActiveX.java" unless="${qtjambi.activex.any.true}"/>
            <exclude name="io/qt/**/Test*OpenGL.java" unless="${qtjambi.opengl.any.true}"/>
            <exclude name="io/qt/**/Test*Auth.java" unless="${qtjambi.networkauth.any.true}"/>
            <exclude name="io/qt/**/Test*DBus.java" unless="${qtjambi.dbus.any.true}"/>
            <exclude name="io/qt/**/Test*Bluetooth.java" unless="${qtjambi.bluetooth.any.true}"/>
            <exclude name="io/qt/**/Test*Script.java" unless="${qtjambi.script.any.true}"/>
            <exclude name="io/qt/**/Test*ScriptTools.java" unless="${qtjambi.scripttools.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngine.java" unless="${qtjambi.webengine.any.true}"/>
            <exclude name="io/qt/**/Test*WebView.java" unless="${qtjambi.webview.any.true}"/>
            <exclude name="io/qt/**/Test*Concurrent.java" unless="${qtjambi.concurrent.any.true}"/>
            <exclude name="io/qt/**/Test*Network.java" unless="${qtjambi.network.any.true}"/>
            <exclude name="io/qt/**/Test*Designer.java" unless="${qtjambi.designer.any.true}"/>
            <exclude name="io/qt/**/Test*Gamepad.java" unless="${qtjambi.gamepad.any.true}"/>
            <exclude name="io/qt/**/Test*UiTools.java" unless="${qtjambi.uitools.any.true}"/>
            <exclude name="io/qt/**/Test*Xml.java" unless="${qtjambi.xml.any.true}"/>
            <exclude name="io/qt/**/Test*Help.java" unless="${qtjambi.help.any.true}"/>
            <exclude name="io/qt/**/Test*Multimedia.java" unless="${qtjambi.multimedia.any.true}"/>
            <exclude name="io/qt/**/Test*MultimediaWidgets.java" unless="${qtjambi.multimediawidgets.any.true}"/>
            <exclude name="io/qt/**/Test*MacExtras.java" unless="${qtjambi.macextras.any.true}"/>
            <exclude name="io/qt/**/Test*X11Extras.java" unless="${qtjambi.x11extras.any.true}"/>
            <exclude name="io/qt/**/Test*WinExtras.java" unless="${qtjambi.winextras.any.true}"/>
            <exclude name="io/qt/**/Test*Nfc.java" unless="${qtjambi.nfc.any.true}"/>
            <exclude name="io/qt/**/Test*OpenGL.java" unless="${qtjambi.opengl.any.true}"/>
            <exclude name="io/qt/**/Test*OpenGLWidgets.java" unless="${qtjambi.openglwidgets.any.true}"/>
            <exclude name="io/qt/**/Test*Positioning.java" unless="${qtjambi.positioning.any.true}"/>
            <exclude name="io/qt/**/Test*PrintSupport.java" unless="${qtjambi.printsupport.any.true}"/>
            <exclude name="io/qt/**/Test*Purchasing.java" unless="${qtjambi.purchsing.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DAnimation.java" unless="${qtjambi.qt3danimation.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DCore.java" unless="${qtjambi.qt3dcore.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DExtras.java" unless="${qtjambi.qt3dextras.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DInput.java" unless="${qtjambi.qt3dinput.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DLogic.java" unless="${qtjambi.qt3dlogic.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DQuick.java" unless="${qtjambi.qt3dquick.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DQuickExtras.java" unless="${qtjambi.qt3dquickextras.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DQuickScene2D.java" unless="${qtjambi.qt3dquickscene2d.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DRender.java" unless="${qtjambi.qt3drender.any.true}"/>
            <exclude name="io/qt/**/Test*Xmlpatterns.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/Test*XmlPatterns.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/Test*Charts.java" unless="${qtjambi.charts.any.true}"/>
            <exclude name="io/qt/**/Test*DataVis.java" unless="${qtjambi.datavisualization.any.true}"/>
            <exclude name="io/qt/**/Test*DataVisualization.java" unless="${qtjambi.datavisualization.any.true}"/>
            <exclude name="io/qt/**/Test*SpatialAudio.java" unless="${qtjambi.spatialaudio.any.true}"/>
            <exclude name="io/qt/**/Test*HttpServer.java" unless="${qtjambi.httpserver.any.true}"/>
            <exclude name="io/qt/**/Test*Nfc.java" unless="${qtjambi.nfc.any.true}"/>
            <exclude name="io/qt/**/Test*Sql.java" unless="${qtjambi.sql.any.true}"/>
            <exclude name="io/qt/**/Test*SQL.java" unless="${qtjambi.sql.any.true}"/>
            <exclude name="io/qt/**/Test*3DCore.java" unless="${qtjambi.3dcore.any.true}"/>
            <exclude name="io/qt/**/Test*Quick3D.java" unless="${qtjambi.quick3d.any.true}"/>
            <exclude name="io/qt/**/Test*VirtualKeyboard.java" unless="${qtjambi.virtualkeyboard.any.true}"/>
            <exclude name="io/qt/**/Test*Testlib.java" unless="${qtjambi.test.any.true}"/>
            <exclude name="io/qt/**/Test*Qml.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/Test*Sensors.java" unless="${qtjambi.sensors.any.true}"/>
            <exclude name="io/qt/**/Test*Scxml.java" unless="${qtjambi.scxml.any.true}"/>
            <exclude name="io/qt/**/Test*WinExtras.java" unless="${qtjambi.winextras.any.true}"/>
            <exclude name="io/qt/**/Test*Quick.java" unless="${qtjambi.quick.any.true}"/>
            <exclude name="io/qt/**/Test*QuickControls.java" unless="${qtjambi.quickcontrols.any.true}"/>
            <exclude name="io/qt/**/Test*QuickWidgets.java" unless="${qtjambi.quickwidgets.any.true}"/>
            <exclude name="io/qt/**/Test*Location.java" unless="${qtjambi.location.any.true}"/>
            <exclude name="io/qt/**/Test*RemoteObjects.java" unless="${qtjambi.remoteobjects.any.true}"/>
            <exclude name="io/qt/**/Test*Statemachine.java" unless="${qtjambi.statemachine.any.true}"/>
            <exclude name="io/qt/**/Test*SerialBus.java" unless="${qtjambi.serialbus.any.true}"/>
            <exclude name="io/qt/**/Test*SerialPort.java" unless="${qtjambi.serialport.any.true}"/>
            <exclude name="io/qt/**/Test*Svg.java" unless="${qtjambi.svg.any.true}"/>
            <exclude name="io/qt/**/Test*SvgWidgets.java" unless="${qtjambi.svgwidgets.any.true}"/>
            <exclude name="io/qt/**/Test*TextToSpeech.java" unless="${qtjambi.texttospeech.any.true}"/>
            <exclude name="io/qt/**/Test*UITools.java" unless="${qtjambi.uitools.any.true}"/>
            <exclude name="io/qt/**/Test*WebChannel.java" unless="${qtjambi.webchannel.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngine.java" unless="${qtjambi.webengine.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngineCore.java" unless="${qtjambi.webenginecore.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngineQuick.java" unless="${qtjambi.webenginequick.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngineWidgets.java" unless="${qtjambi.webenginewidgets.any.true}"/>
            <exclude name="io/qt/**/Test*WebSockets.java" unless="${qtjambi.websockets.any.true}"/>
            <exclude name="io/qt/**/Test*WebView.java" unless="${qtjambi.webview.any.true}"/>
            <exclude name="io/qt/**/Test*XmlPatterns.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/Test*Pdf.java" unless="${qtjambi.pdf.any.true}"/>
            <exclude name="io/qt/**/Test*PdfWidgets.java" unless="${qtjambi.pdfwidgets.any.true}"/>
            <exclude name="io/qt/**/TestActiveX*.java" unless="${qtjambi.activex.any.true}"/>
            <exclude name="io/qt/**/TestQml*.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/TestOpenGL*.java" unless="${qtjambi.opengl.any.true}"/>
            <exclude name="io/qt/**/TestAuth*.java" unless="${qtjambi.networkauth.any.true}"/>
            <exclude name="io/qt/**/TestDBus*.java" unless="${qtjambi.dbus.any.true}"/>
            <exclude name="io/qt/**/TestBluetooth*.java" unless="${qtjambi.bluetooth.any.true}"/>
            <exclude name="io/qt/**/TestScript*.java" unless="${qtjambi.script.any.true}"/>
            <exclude name="io/qt/**/TestQScript*.java" unless="${qtjambi.script.any.true}"/>
            <exclude name="io/qt/**/TestWebEngineQ*.java" unless="${qtjambi.webengine.any.true}"/>
            <exclude name="io/qt/**/TestWebView*.java" unless="${qtjambi.webview.any.true}"/>
            <exclude name="io/qt/**/TestConcurrent*.java" unless="${qtjambi.concurrent.any.true}"/>
            <exclude name="io/qt/**/TestNetwork*.java" unless="${qtjambi.network.any.true}"/>
            <exclude name="io/qt/**/TestDesigner*.java" unless="${qtjambi.designer.any.true}"/>
            <exclude name="io/qt/**/TestUiTools*.java" unless="${qtjambi.uitools.any.true}"/>
            <exclude name="io/qt/**/TestXml*.java" unless="${qtjambi.xml.any.true}"/>
            <exclude name="io/qt/**/TestHelp*.java" unless="${qtjambi.help.any.true}"/>
            <exclude name="io/qt/**/TestMultimedia*.java" unless="${qtjambi.multimedia.any.true}"/>
            <exclude name="io/qt/**/TestXmlpatterns*.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/TestXmlPatterns*.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/TestSql*.java" unless="${qtjambi.sql.any.true}"/>
            <exclude name="io/qt/**/TestSQL*.java" unless="${qtjambi.sql.any.true}"/>
            <exclude name="io/qt/**/Test3DCore*.java" unless="${qtjambi.3dcore.any.true}"/>
            <exclude name="io/qt/**/TestVirtualKeyboard*.java" unless="${qtjambi.virtualkeyboard.any.true}"/>
            <exclude name="io/qt/**/TestSpatialAudio*.java" unless="${qtjambi.spatialaudio.any.true}"/>
            <exclude name="io/qt/**/TestCharts*.java" unless="${qtjambi.charts.any.true}"/>
            <exclude name="io/qt/**/TestDataVis*.java" unless="${qtjambi.datavisualization.any.true}"/>
            <exclude name="io/qt/**/TestQuick3D*.java" unless="${qtjambi.quick3d.any.true}"/>
            <exclude name="io/qt/**/TestQml*.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/TestSensors*.java" unless="${qtjambi.sensors.any.true}"/>
            <exclude name="io/qt/**/TestScxml*.java" unless="${qtjambi.scxml.any.true}"/>
            <exclude name="io/qt/**/TestWinExtras*.java" unless="${qtjambi.winextras.any.true}"/>
            <exclude name="io/qt/**/TestQuick*.java" unless="${qtjambi.quick.any.true}"/>
            <exclude name="io/qt/**/TestLocation*.java" unless="${qtjambi.location.any.true}"/>
            <exclude name="io/qt/**/TestRemoteObjects*.java" unless="${qtjambi.remoteobjects.any.true}"/>
            <exclude name="io/qt/**/TestQtjambiCast*.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/TestTestlib*.java" unless="${qtjambi.test.any.true}"/>
			<exclude name="io/qt/**/TestHttpServer*.java" unless="${qtjambi.httpserver.any.true}"/>
            <exclude name="io/qt/**/TestQQmlListProperty.java" unless="${qtjambi.quick.any.true}"/>
            <exclude name="io/qt/**/QtDBus*.java" unless="${qtjambi.dbus.any.true}"/>
            <exclude name="io/qt/qml*/**" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/TestBluetoothDiscovery.java"/>
            <exclude name="io/qt/**/TestQuickTextureMetalQt6.java"/>
        </fileset>
    </target>
    <property file="tests.properties"/>
    <property name="junit.exists" value="tests.junit.exists" />

    <target name="tests.clean-impl" depends="load-properties">
        <delete dir="${outputDir}/tests"/>
        <delete dir="${outputDir}/${qtjambi.osname}/tests/autotests"/>
        <delete dir="${outputDir}/${qtjambi.osname}/tests/auto"/>
        <delete dir="${outputDir}/tests"/>
        <delete dir="${outputDir}/${qtjambi.osname}/tests"/>
    </target>

    <target name="reports.clean" depends="load-properties" description="Cleans the Unit Test results">
        <delete dir="${outputDir}/${qtjambi.osname}/tests/junitxml-*"/>
        <delete dir="${outputDir}/${qtjambi.osname}/tests/TestResults-*"/>
    </target>

    <target name="check.junit">
        <available property="junit.path" type="file" file="${tests.junit}"/>
        <fail message="Path to JUnit is required to build the Unit Tests. Specify the path in tests.properties">
            <condition>
                <not>
                    <isset property="junit.path"/>
                </not>
            </condition>
        </fail>
    </target>
    
    <target name="check.ssl">
        <available property="qtjambi.ssl" type="file" file="${generator.outputdir}/java/io/qt/network/QSslSocket.java"/>
    </target>

    <target name="compile.native.generator" depends="init.build, load-properties, generator.make-impl">
        <mkdir dir="${outputDir}/tests"/>
        <generator dir="${generator.builddir}/../bin"
                importdirectories="generator/${psep}${basedir}/src/cpp/autotests"
                outputDirectory="${outputDir}/tests"
                generatorDirectory="${generator.builddir}/../bin"
				nullness="${qtjambi.generate.nullness}"
                qtlibdirectory="${generator.builddir}/../lib${psep}${tools.qt.libdir}"
                qtbindirectory="${generator.builddir}/../bin${psep}${tools.qt.bindir}"
				qtjambiVersion="${qtjambi.patchversion}"
                includeDirectories="${qtjambi.qt.includedir};${basedir}/src/cpp/QtJambiGenerator/targets;${basedir}/src/cpp/autotests${psep}${generator.includepaths}"
                typesystem="${basedir}/src/cpp/autotests/autotests.qml"
                header="${basedir}/src/cpp/autotests/autotests.h"
            />
        <antcall target="generate.uic"/>
    </target>

    <target name="generate.uic">
        <if>
            <available file="${deploymentdir}/qtjambi-uic-${qtjambi.jar.version}.jar" type="file"/>
            <then>
                <uic uifile="${java.srcdir}/autotests/io/qt/autotests/ui/uitest.ui"
                     targetpackage="io.qt.autotests.generated"
                     targetdirectory="${outputDir}/tests/java/autotests"
                     libfiles=""
                     connections=""/>
                <uic uifile="${java.srcdir}/autotests/io/qt/autotests/ui/bluetoothdevice.ui"
                     targetpackage="io.qt.autotests.generated"
                     targetdirectory="${outputDir}/tests/java/autotests"
                     libfiles=""
                     connections=""/>
                <uic uifile="${java.srcdir}/autotests/io/qt/autotests/ui/bluetoothservice.ui"
                     targetpackage="io.qt.autotests.generated"
                     targetdirectory="${outputDir}/tests/java/autotests"
                     libfiles=""
                     connections=""/>
            </then>
        </if>
    </target>
    <target name="compile.native" depends="init.build">
        <mkdir dir="${outputDir}/${qtjambi.osname}/tests/autotests"/>
        <qmake  dir="${outputDir}/${qtjambi.osname}/tests/autotests"
                pro="${basedir}/src/cpp/autotests/autotests.pro"
                config="${qtjambi.configuration}"
                debugTools="${qtjambi.debug-tools}"
                qmakebinary="${qtjambi.qt.qmake.abspath}"/>
        <make dir="${outputDir}/${qtjambi.osname}/tests/autotests" target="${qtjambi.qmake.target.default}"/>
        <if>
            <os family="mac"/>
            <then>
                <install-name-tool dir="${outputDir}/${qtjambi.osname}/tests/lib/" libname="autotests" debug="false" suffix="jnilib"/>
                <install-name-tool dir="${outputDir}/${qtjambi.osname}/tests/lib/" libname="autotests" debug="true" suffix="jnilib"/>
            </then>
        </if>
		<if>
			<equals arg1="${qtjambi.osname}" arg2="ios"/>
			<then>
				<antcall inheritrefs="true" target="create-ios-bundles">
				</antcall>
			</then>
        </if>
		<if>
			<or>
				<equals arg1="${qtjambi.osname}" arg2="android"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
			</or>
			<then>
				<antcall inheritrefs="true" target="create-android-bundles">
					<param name="qtjambi.android.abi" value="armeabi-v7a"/>
					<param name="qtjambi.android.osname" value="android-arm"/>
				</antcall>
				<antcall inheritrefs="true" target="create-android-bundles">
					<param name="qtjambi.android.abi" value="arm64-v8a"/>
					<param name="qtjambi.android.osname" value="android-arm64"/>
				</antcall>
				<antcall inheritrefs="true" target="create-android-bundles">
					<param name="qtjambi.android.abi" value="x86"/>
					<param name="qtjambi.android.osname" value="android-x86"/>
				</antcall>
				<antcall inheritrefs="true" target="create-android-bundles">
					<param name="qtjambi.android.abi" value="x86_64"/>
					<param name="qtjambi.android.osname" value="android-x64"/>
				</antcall>
			</then>
		</if>
    </target>
	<target name="create-android-bundles">
		<if>
			<available file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_${qtjambi.android.abi}.so"/>
			<then>
				<mkdir dir="${outputDir}/${qtjambi.osname}/tests/lib/${qtjambi.android.abi}"/>
				<copy file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_${qtjambi.android.abi}.so" todir="${outputDir}/${qtjambi.osname}/tests/lib/${qtjambi.android.abi}"/>
				<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-native-${qtjambi.android.osname}-${qtjambi.jar.version}.jar" excludes="${jar.excludes}">
					<manifest>
						<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"             value="QtJambi Autotests natives ${qtjambi.android.osname}"/>
						<attribute name="Bundle-Description"      value="QtJambi Autotests natives ${qtjambi.android.osname}"/>
					</manifest>
					<fileset dir="${outputDir}/${qtjambi.osname}/tests" includes="lib/${qtjambi.android.abi}/libautotests_${qtjambi.android.abi}.so"/>
				</jar>
			</then>
		</if>
		<if>
			<available file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_debug_${qtjambi.android.abi}.so"/>
			<then>
				<mkdir dir="${outputDir}/${qtjambi.osname}/tests/lib/${qtjambi.android.abi}"/>
				<copy file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_debug_${qtjambi.android.abi}.so" todir="${outputDir}/${qtjambi.osname}/tests/lib/${qtjambi.android.abi}"/>
				<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-native-${qtjambi.android.osname}-debug-${qtjambi.jar.version}.jar" excludes="${jar.excludes}">
					<manifest>
						<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"             value="QtJambi Autotests natives ${qtjambi.android.osname}"/>
						<attribute name="Bundle-Description"      value="QtJambi Autotests natives ${qtjambi.android.osname}"/>
					</manifest>
					<fileset dir="${outputDir}/${qtjambi.osname}/tests" includes="lib/${qtjambi.android.abi}/libautotests_debug_${qtjambi.android.abi}.so"/>
				</jar>
			</then>
		</if>
    </target>
	<target name="create-ios-bundles">
		<if>
			<available file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests.a"/>
			<then>
				<mkdir dir="${outputDir}/${qtjambi.osname}/tests/"/>
				<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-native-ios-${qtjambi.jar.version}.jar" excludes="${jar.excludes}">
					<manifest>
						<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"             value="QtJambi Autotests natives iOS"/>
						<attribute name="Bundle-Description"      value="QtJambi Autotests natives iOS"/>
					</manifest>
					<fileset dir="${outputDir}/${qtjambi.osname}/tests" includes="lib/libautotests.a"/>
				</jar>
			</then>
		</if>
		<if>
			<available file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_debug.a"/>
			<then>
				<mkdir dir="${outputDir}/${qtjambi.osname}/tests/"/>
				<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-native-ios-debug-${qtjambi.jar.version}.jar" excludes="${jar.excludes}">
					<manifest>
						<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"             value="QtJambi Autotests natives iOS"/>
						<attribute name="Bundle-Description"      value="QtJambi Autotests natives iOS"/>
					</manifest>
					<fileset dir="${outputDir}/${qtjambi.osname}/tests" includes="lib/libautotests_debug.a"/>
				</jar>
			</then>
		</if>
    </target>

    <target name="compile.deps">
    </target>
    
    <target name="copy-resources">
        <copy todir="${test.java.outdir}" includeemptydirs="false">
            <fileset dir="${src}">
                <include name="**/*"/>
                <exclude name="**/.*"/>
                <exclude name="build.xml"/>
                <exclude name="**/*.java"/>
                <exclude name="**/*.jui"/>
                <exclude name="${jar.excludes}"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.java">
        <ant inheritrefs="true" target="compile.java.impl">
            <property name="module.suffix" value=""/>
            <property name="test.java.outdir" location="${outputDir}/${qtjambi.osname}/tests/java"/>
            <property name="test.java.srcoutdir" location="${outputDir}/${qtjambi.osname}/tests/java-src"/>
        </ant>
    </target>
    <target name="compile.plugins.java">
        <ant inheritrefs="true" target="compile.java.plugins.impl">
            <property name="module.suffix" value=""/>
            <property name="test.java.outdir" location="${outputDir}/${qtjambi.osname}/tests/java"/>
            <property name="test.java.srcoutdir" location="${outputDir}/${qtjambi.osname}/tests/java-src"/>
        </ant>
    </target>
    <target name="compile.java.impl" depends="load-properties">
        <delete dir="${test.java.outdir}" failonerror="no"/>
        <mkdir dir="${test.java.outdir}"/>
        <!-- encoding="UTF-8" required due to some file tests (I18N) using
        no ASCII/ISO-8859-1 characters and the MacOSX Java using "MacRoman"
        character set by default. -->
        <path id="qtjambi.classpath">
            <fileset dir="${deploymentdir}">
                <include name="qtjambi*-${qtjambi.jar.version}.jar"/>
                <exclude name="qtjambi-*native-*.jar"/>
            </fileset>
            <pathelement location="${tests.junit}" />
            <pathelement location="${tests.hamcrest}" />
            <pathelement location="${jna.lib}" />
        </path>
        <delete dir="${test.java.srcoutdir}"/>
        <mkdir dir="${test.java.srcoutdir}"/>
        <copy todir="${test.java.srcoutdir}">
            <fileset refid="qtjambi.autotest.classes"/>
        </copy>
        <copy todir="${test.java.srcoutdir}">
            <fileset dir="src/java/autotests">
                <include name="io/qt/**/*"/>
                <exclude name="io/qt/**/Test*.java"/>
            </fileset>
        </copy>
		<echo>copying ${outputDir}/tests/java/autotests/*</echo>
        <copy todir="${test.java.srcoutdir}">
            <fileset dir="${outputDir}/tests/java/autotests" includes="*.java,io/qt/**/*.java"/>
        </copy>
        <javac destdir="${test.java.outdir}" debug="true" srcdir="${test.java.srcoutdir}"
                includeantruntime="false" excludes="module-info.java"
                source="8" target="8" encoding="UTF-8">
            <compilerarg value="-Xlint:deprecation" />
            <compilerarg value="-Xlint:unchecked" />
            <compilerarg value="-Xlint:-options" />
            <classpath refid="qtjambi.classpath"/>
        </javac>
        <antcall inheritrefs="true" target="copy-resources">
            <param name="src" value="${basedir}/src/java/autotests"/>
        </antcall>
		<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-${qtjambi.jar.version}.jar">
			<manifest>
				<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
<!--                <attribute name="Bundle-Activator"       value="io.qt.qtjambi.${qtjambi.osplatform}.${qtjambi.configuration}.osgi.Activator"/> -->
				<attribute name="Bundle-Description"      value="QtJambi Autotests"/>
				<!-- TODO: qtjambi.png -->
				<!-- <attribute name="Bundle-Icon"             value="qtjambi.png"/> -->
				<attribute name="Bundle-License"          value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999 with Nokia Qt LGPL Exception version 1.0"/>
<!--                <attribute name="Bundle-Localization"    value="plugin"/> -->
				<attribute name="Bundle-ManifestVersion"  value="2"/>
				<attribute name="Bundle-Name"             value="QtJambi Autotests"/>
				<attribute name="Bundle-RequiredExecutionEnvironment" value="${minimum.java.version}"/>
				<attribute name="Bundle-Version"          value="${qtjambi.version.bundle}"/>
				<attribute name="QtJambi-Plugin-Metadata" value="${plugin.metadata}"/>
				<attribute name="QtJambi-Plugin-Class"    value="${plugin.class.name}"/>
				<attribute name="QtJambi-Plugin-Name"    value="${module}"/>
			</manifest>
			<fileset dir="${test.java.outdir}"/>
		</jar>
		<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-${qtjambi.jar.version}-sources.jar" excludes="${jar.excludes}">
			<manifest>
				<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
				<attribute name="Bundle-Name"             value="QtJambi Autotests sources"/>
				<attribute name="Bundle-Description"      value="QtJambi Autotests sources"/>
			</manifest>
			<fileset dir="${test.java.srcoutdir}" excludes="**/*.class"/>
		</jar>
    </target>
    <target name="compile.java.plugins.impl">
        <if>
            <istrue value="${qtjambi.qml.any.true}"/>
            <then>
                <ant antfile="${basedir}/src/java/qml/qml.xml" inheritrefs="true" target="build">
                    <property name="qtjambi.testbuild" value="true"/>
                    <property name="qtjambi-build" value="true"/>
                </ant>
            </then>
        </if>
        <ant antfile="${basedir}/src/java/plugins/plugins.xml" inheritrefs="true" target="build">
            <property name="qtjambi.testbuild" value="true"/>
            <property name="qtjambi-build" value="true"/>
        </ant>
        <if>
            <or>
                <equals arg1="${qtjambi.configuration}" arg2="release" />
                <equals arg1="${qtjambi.configuration}" arg2="test" />
                <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
            </or>
            <then>
                <if>
                    <istrue value="${qtjambi.qml.any.true}"/>
                    <then>
                        <ant antfile="${basedir}/src/java/qml/qml.xml" inheritrefs="true" target="build">
                            <property name="qtjambi.testbuild" value="true"/>
                            <property name="qtjambi-build" value="true"/>
                            <property name="platformjar.debug" value="false"/>
                            <property name="qtjambi.qml.bundle" value="true"/>
                            <property name="module.suffix" value=""/>
                        </ant>
                    </then>
                </if>
                <ant antfile="${basedir}/src/java/plugins/plugins.xml" inheritrefs="true" target="build">
                    <property name="qtjambi.testbuild" value="true"/>
                    <property name="qtjambi-build" value="true"/>
                    <property name="platformjar.debug" value="false"/>
                    <property name="qtjambi.plugin.bundle" value="true"/>
                    <property name="module.suffix" value=""/>
                </ant>
            </then>
        </if>
        <if>
            <or>
                <equals arg1="${qtjambi.configuration}" arg2="debug" />
                <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
            </or>
            <then>
                <if>
                    <istrue value="${qtjambi.qml.any.true}"/>
                    <then>
                        <ant antfile="${basedir}/src/java/qml/qml.xml" inheritrefs="true" target="build">
                            <property name="qtjambi.testbuild" value="true"/>
                            <property name="qtjambi-build" value="true"/>
                            <property name="platformjar.debug" value="true"/>
                            <property name="qtjambi.qml.bundle" value="true"/>
                        </ant>
                    </then>
                </if>
                <ant antfile="${basedir}/src/java/plugins/plugins.xml" inheritrefs="true" target="build">
                    <property name="qtjambi.testbuild" value="true"/>
                    <property name="qtjambi-build" value="true"/>
                    <property name="platformjar.debug" value="true"/>
                    <property name="qtjambi.plugin.bundle" value="true"/>
                </ant>
            </then>
        </if>
    </target>

    <target name="run.test" depends="check.junit, load-properties">
		<if>
			<or>
				<equals arg1="${qtjambi.osname}" arg2="ios"/>
				<equals arg1="${qtjambi.osname}" arg2="android"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
			</or>
			<then>
				<property name="classes" value="${toString:qtjambi.autotest.classes}"/>
				<stringreplace property="classes" target=".java" replacement=""/>
				<stringreplace property="classes" target="${sep}" replacement="."/>
				<stringreplace property="classes" target="${psep}" replacement="&quot;,&#10;&quot;"/>
				<echo>Test in ${qtjambi.osname} externally:</echo>
				<echo>&quot;${classes}&quot;</echo>
			</then>
			<else>
				<qtjambi-resolve-path var="absOutputDir"     path="${outputDir}" />
				<property name="jambiLib"      location="${deploymentdir}/native/${qtjambi.osname}/${kind}/lib"/>
				<property name="jambiBin"      location="${deploymentdir}/native/${qtjambi.osname}/${kind}/bin"/>
				<if>
					<equals arg1="${jdk-exec-version}" arg2="8"/>
					<then>
						<if>
							<os family="windows"/>
							<then>
								<property name="test.jvm" location="${java8.home.target}/bin/java.exe"/>
							</then>
							<else>
								<property name="test.jvm" location="${java8.home.target}/bin/java"/>
							</else>
						</if>
						<if>
							<and>
								<not>
									<available file="${test.jvm}" type="file"/>
								</not>
								<istrue value="${check.jdk8}"/>
							</and>
							<then>
								<fail message="No jdk8 available. Please specify JAVA8_HOME_TARGET environment variable."/>
							</then>
						</if>
						<path id="qtjambi.classpath">
							<fileset dir="${deploymentdir}">
								<include name="qtjambi*-${qtjambi.jar.version}.jar"/>
								<exclude name="qtjambi-*native-*.jar"/>
							</fileset>
							<pathelement location="${tests.junit}" />
							<pathelement location="${tests.hamcrest}" />
							<pathelement location="${sqlite.jdbc}" />
							<pathelement location="${jna.lib}" />
							<pathelement path="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-${qtjambi.jar.version}.jar" />
							<!--pathelement path="${absOutputDir}/${qtjambi.osname}/tests/java" /-->
						</path>
					</then>
					<else>
						<if>
							<equals arg1="${jdk-exec-version}" arg2="arm64"/>
							<then>
								<property name="test.jvm" location="${java.arm64.home.target}/bin/java"/>
							</then>
							<else>
								<if>
									<equals arg1="${jdk-exec-version}" arg2="x64"/>
									<then>
										<property name="test.jvm" location="${java.x64.home.target}/bin/java"/>
									</then>
								</if>
							</else>
						</if>
						<if>
							<os family="windows"/>
							<then>
								<property name="test.jvm" location="${java.home.target}/bin/java.exe"/>
							</then>
							<else>
								<property name="test.jvm" location="${java.home.target}/bin/java"/>
							</else>
						</if>
						<if>
							<not>
								<available file="${test.jvm}" type="file"/>
							</not>
							<then>
								<property name="test.jvm" location="java"/>
							</then>
						</if>
						<path id="qtjambi.classpath">
							<fileset dir="${deploymentdir}">
								<include name="qtjambi*-${qtjambi.jar.version}.jar"/>
								<exclude name="qtjambi-*native-*.jar"/>
							</fileset>
							<pathelement location="${tests.junit}" />
							<pathelement location="${tests.hamcrest}" />
							<pathelement location="${sqlite.jdbc}" />
							<pathelement location="${jna.lib}" />
							<pathelement path="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-${qtjambi.jar.version}.jar" />
							<!--pathelement path="${absOutputDir}/${qtjambi.osname}/tests/java" /-->
						</path>
					</else>
				</if>
				
				<if>
					<or>
						<equals arg1="${jdk-exec-version}" arg2=""/>
						<available file="${test.jvm}" type="file"/>
					</or>
					<then>
						<if>
							<os family="windows"/>
							<then>
								<property name="qtPath"           location="${qtjambi.qt.bindir}" />
								<property name="qtJambiPath"      location="${deploymentdir}/native/${qtjambi.osname}/${kind}/bin" />
								<property name="testLibPath"      location="${outputDir}/${qtjambi.osname}/tests/bin" />
							</then>
							<else>
								<property name="qtPath"           location="${qtjambi.qt.libdir}" />
								<property name="qtJambiPath"      location="${deploymentdir}/native/${qtjambi.osname}/${kind}/lib" />
								<property name="testLibPath"      location="${outputDir}/${qtjambi.osname}/tests/lib" />
							</else>
						</if>
						<property name="qtjambiPluginPath"   location="${deploymentdir}/native/${qtjambi.osname}/${kind}/plugins" />
						<property name="testPluginPath"   location="${outputDir}/${qtjambi.osname}/tests/${kind}/plugins" />
						<property name="testQmlPath"   location="${outputDir}/${qtjambi.osname}/tests/${kind}/qml" />
						<condition property="env.qtjambi.debug.trace" value="QTJAMBI_DEBUG_TRACE" else="QTJAMBI_DEBUG_TRACE_DISABLED">
							<istrue value="${qtjambi.debug.trace}"/>
						</condition>
						<if>
							<available type="file" file="${sqlite.jdbc}"/>
							<then>
							</then>
							<else>
								<mkdir dir="extjars"/>
								<get src="${sqlite.jdbc.download.url}" dest="${sqlite.jdbc}" verbose="true"/>
							</else>
						</if>
						<property name="testJdbcPath"   location="${sqlite.jdbc}" />
						<if>
							<available type="file" file="${jna.lib}"/>
							<then>
							</then>
							<else>
								<mkdir dir="extjars"/>
								<get src="${jna.lib.download.url}" dest="${jna.lib}" verbose="true"/>
							</else>
						</if>
						<if>
							<os family="mac"/>
							<then>
								<property name="XstartOnFirstThread" value="-XstartOnFirstThread" />
							</then>
							<else>
								<property name="XstartOnFirstThread" value="-Dx" />
							</else>
						</if>
						<if>
							<not>
								<isset property="test"/>
							</not>
							<then>
								<delete dir="${outputDir}/${qtjambi.osname}/tests/junitxml-${kind}${jdk-exec-version}" />
							</then>
						</if>
						<condition property="Xcheck_jni" value="-Xcheck:jni" else="-Dx">
							<istrue value="${jnicheck}"/>
						</condition>
						<condition property="Dskip-deletion" value="-Dqtjambi.deployer.skip.deletion=${qtjambi.deployer.skip.deletion}" else="-Dx">
							<isset property="qtjambi.deployer.skip.deletion"/>
						</condition>
						<condition property="Ddelay" value="-Dtest.delay=${test.delay}" else="-Dx">
							<isset property="test.delay"/>
						</condition>
						<condition property="Dattach" value="-Dtest.attach=${test.attach}" else="-Dx">
							<isset property="test.attach"/>
						</condition>
						<condition property="Dkeep-temp-deployment" value="-Dio.qt.keep-temp-deployment=${io.qt.keep-temp-deployment}" else="-Dx">
							<isset property="io.qt.keep-temp-deployment"/>
						</condition>
						<condition property="Ddeploymentdir" value="-Dio.qt.deploymentdir=${io.qt.deploymentdir}" else="-Dx">
							<isset property="io.qt.deploymentdir"/>
						</condition>
						<trycatch>
							<try>
								<mkdir dir="${outputDir}/${qtjambi.osname}/tests/junitxml-${kind}${jdk-exec-version}"/>
								<junit fork="yes" jvm="${test.jvm}" printsummary="true" dir="${outputDir}/${qtjambi.osname}/tests/${kind}/" haltonfailure="no" timeout="${qtjambi.junit.timeout}" showoutput="yes" logfailedtests="yes" threads="${qtjambi.junit.threads}">
									<classpath refid="qtjambi.classpath"/>
									<jvmarg value="-Dio.qt.library-path-override=${qtPath}${psep}${qtJambiPath}${psep}${testLibPath}"/>
									<jvmarg value="-Dio.qt.verbose-loading=${io.qt.verbose-loading}"/>
									<jvmarg value="-Dio.qt.debug=${kind}"/><!-- This should not be needed now, it loads default from MANIFEST.MF -->
									<jvmarg value="-Dio.qt.log-messages=ALL"/>
									<jvmarg value="-Dio.qt.no-deployment-spec=true"/>
									<jvmarg value="-Dio.qt.qml-imports=${testQmlPath}"/>
									<jvmarg value="-Dio.qt.pluginpath=${qtjambiPluginPath}${psep}${testPluginPath}"/>
									<jvmarg value="${XstartOnFirstThread}"/>
									<jvmarg value="-Dqtjambi.deployer.test.jdbc=${testJdbcPath}"/>
									<jvmarg value="-Djava.util.logging.config.file=${basedir}/logging.properties"/>
									<jvmarg value="-Dqtjambi.antcontrib=${ant.library.dir}/ant.jar"/>
									<jvmarg value="-Xrs"/><!-- This stops JVM intercepting SIGSEGV
									from native code (so we can see where/why it crashed) otherwise
									the JVM may promote SIGSEGV to NullPointerException, which is
									not that useful for debugging. -->
									<jvmarg value="${Xcheck_jni}"/>
									<jvmarg value="${Dskip-deletion}"/>
									<jvmarg value="${Ddelay}"/>
									<jvmarg value="${Dattach}"/>
									<jvmarg value="${Dkeep-temp-deployment}"/>
									<jvmarg value="${Ddeploymentdir}"/>
									<env key="${env.qtjambi.debug.trace}" value="1"/>
									<env key="QT_MULTIMEDIA_PREFERRED_PLUGINS" value="Test"/>
									<!--env key="QML_IMPORT_PATH" value="${absQtPath}/../qml"/-->
									<env key="DYLD_FRAMEWORK_PATH" value="${qtPath}"/>
									<env key="DYLD_LIBRARY_PATH" value="${qtJambiPath}"/>
						<!--            <jvmarg value="-verbose"/> -->
									<formatter type="xml" usefile="yes" />
									<batchtest fork="yes" todir="${outputDir}/${qtjambi.osname}/tests/junitxml-${kind}${jdk-exec-version}">
										<fileset refid="qtjambi.autotest.classes"/>
									</batchtest>
								</junit>
								<modify-test-results dir="${outputDir}/${qtjambi.osname}/tests/junitxml-${kind}${jdk-exec-version}" version="${qtjambi.jar.version}" mode="${kind}" jdk="${jdk-exec-version}"/>
							</try>
							<finally>
							</finally>
						</trycatch>
					</then>
				</if>
            </else>
        </if>
    </target>

    <target name="run">
        <if>
            <available file="${deploymentdir}/native/${qtjambi.osname}/debug" type="dir"/>
            <then>
                <antcall target="debug.run"/>
            </then>
            <else>
                <if>
                    <available file="${deploymentdir}/native/${qtjambi.osname}/release" type="dir"/>
                    <then>
                        <antcall target="release.run"/>
                    </then>
                    <else>
                        <fail message="No build available."/>
                    </else>
                </if>
            </else>
        </if>
    </target>
    
    <target name="release.run">
        <if>
            <available file="${deploymentdir}/native/${qtjambi.osname}/release" type="dir"/>
            <then>
                <if>
                    <os family="mac"/>
                    <then>
                        <if>
                            <isset property="java.arm64.home.target"/>
                            <then>
                                <antcall target="run.test">
                                    <param name="jdk-exec-version" value="arm64"/>
                                    <param name="kind"          value="release"/>
                                    <param name="dbgsuffix"          value=""/>
                                </antcall>
                            </then>
                        </if>
                        <if>
                            <isset property="java.x64.home.target"/>
                            <then>
                                <antcall target="run.test">
                                    <param name="jdk-exec-version" value="x64"/>
                                    <param name="kind"          value="release"/>
                                    <param name="dbgsuffix"          value=""/>
                                </antcall>
                            </then>
                        </if>
                    </then>
                    <else>
                        <antcall target="run.test">
                            <param name="jdk-exec-version" value=""/>
                            <param name="kind"          value="release"/>
                                    <param name="dbgsuffix"          value=""/>
                        </antcall>
                    </else>
                </if>
            </then>
            <else>
                <fail message="No release build available."/>
            </else>
        </if>
    </target>
    
    <target name="debug.run">
        <if>
            <available file="${deploymentdir}/native/${qtjambi.osname}/debug" type="dir"/>
            <then>
                <if>
                    <os family="mac"/>
                    <then>
                        <if>
                            <isset property="java.arm64.home.target"/>
                            <then>
                                <antcall target="run.test">
                                    <param name="jdk-exec-version" value="arm64"/>
                                    <param name="kind"          value="debug"/>
                                    <param name="dbgsuffix"          value="_debug"/>
                                </antcall>
                            </then>
                        </if>
                        <if>
                            <isset property="java.x64.home.target"/>
                            <then>
                                <antcall target="run.test">
                                    <param name="jdk-exec-version" value="x64"/>
                                    <param name="kind"          value="debug"/>
                                    <param name="dbgsuffix"          value="_debug"/>
                                </antcall>
                            </then>
                        </if>
                    </then>
                    <else>
                        <antcall target="run.test">
                            <param name="jdk-exec-version" value=""/>
                            <param name="kind"          value="debug"/>
							<param name="dbgsuffix"          value="_debug"/>
                        </antcall>
                    </else>
                </if>
            </then>
            <else>
                <fail message="No debug build available."/>
            </else>
        </if>
    </target>
    
    <target name="release.run8">
        <if>
            <available file="${deploymentdir}/native/${qtjambi.osname}/release" type="dir"/>
            <then>
                <antcall target="run.test">
                    <param name="jdk-exec-version" value="8"/>
                    <param name="kind"             value="release"/>
					<param name="dbgsuffix"          value=""/>
                </antcall>
            </then>
            <else>
                <fail message="No release build available."/>
            </else>
        </if>
    </target>
    
    <target name="debug.run8">
        <if>
            <available file="${deploymentdir}/native/${qtjambi.osname}/debug" type="dir"/>
            <then>
                <antcall target="run.test">
                    <param name="jdk-exec-version" value="8"/>
                    <param name="kind"          value="debug"/>
					<param name="dbgsuffix"          value="_debug"/>
                </antcall>
            </then>
            <else>
                <fail message="No debug build available."/>
            </else>
        </if>
    </target>
    
    <target name="tests.report.impl">
        <delete dir="${basedir}/TestResults"/>
        <mkdir dir="${basedir}/TestResults"/>
        <junitreport todir="${basedir}/TestResults">
            <fileset dir="${basedir}">
                <include name="*/build/*/tests/junitxml-*/TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${basedir}/TestResults" />
        </junitreport>
    </target>
    
    <target name="tests.report"
            depends="log, init.taskdef" description="Generates all test reports">
        <antcall target="tests.report.impl"/>
    </target>
    
    <target name="tests.generate-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.native.generator, compile.native, compile.java, compile.plugins.java"/>

    <target name="tests.compile-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.native, compile.java, compile.plugins.java"/>
            
    <target name="tests.compile.native-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.native"/>
            
    <target name="tests.compile.java-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.java"/>

    <target name="tests.compile.plugins-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.plugins.java"/>

    <target name="tests.run-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="run"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.run.all-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="release.run"/>
                <antcall target="debug.run"/>
                <antcall target="release.run8"/>
                <antcall target="debug.run8"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.release.run-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="release.run"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.debug.run-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="debug.run"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.release.run8-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="release.run8">
                    <param name="check.jdk8" value="true"/>
                </antcall>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.debug.run8-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="debug.run8">
                    <param name="check.jdk8" value="true"/>
                </antcall>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.release.run.all-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="release.run"/>
                <antcall target="release.run8">
                    <param name="check.jdk8" value="true"/>
                </antcall>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>
    
    <target name="tests.debug.run.all-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="debug.run"/>
                <antcall target="debug.run8">
                    <param name="check.jdk8" value="true"/>
                </antcall>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>
</project>
