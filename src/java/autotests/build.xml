<!--===============================================================================================
==
== Copyright (C) 2009-2025 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
==
== This file is part of Qt Jambi.
==
== $BEGIN_LICENSE$
==
== GNU Lesser General Public License Usage
== This file may be used under the terms of the GNU Lesser
== General Public License version 2.1 as published by the Free Software
== Foundation and appearing in the file LICENSE.LGPL included in the
== packaging of this file.  Please review the following information to
== ensure the GNU Lesser General Public License version 2.1 requirements
== will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
==
== GNU General Public License Usage
== Alternatively, this file may be used under the terms of the GNU
== General Public License version 3.0 as published by the Free Software
== Foundation and appearing in the file LICENSE.GPL included in the
== packaging of this file.  Please review the following information to
== ensure the GNU General Public License version 3.0 requirements will be
== met: http://www.gnu.org/copyleft/gpl.html.
==
== $END_LICENSE$
==
== This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
== WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
==
================================================================================================-->
<project name="autotests">

    <target name="load-properties">
        <property environment="env"/>
        <tstamp/>
        <condition property="test.includes" value="${test}" else="*">
            <and>
                <isset property="test"/>
                <not>
                    <equals arg1="${test}" arg2=""/>
                </not>
            </and>
        </condition>
        <condition property="geq.qt61" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="1"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt62" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="2"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt63" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="3"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt64" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="4"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt65" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="5"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt66" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="6"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt67" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="7"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt68" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="8"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt69" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="9"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt610" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="10"/>
				</and>
			</or>
        </condition>
        <condition property="geq.qt611" value="true">
			<or>
				<greater arg1="${qtjambi.soname.version.major}" arg2="6"/>
				<and>
					<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
					<greater-or-equals arg1="${qtjambi.soname.version.minor}" arg2="11"/>
				</and>
			</or>
        </condition>
        <condition property="less.jdk17" value="true">
			<less arg1="${target.java.version}" arg2="17"/>
        </condition>
        <condition property="less.jdk19" value="true">
			<less arg1="${target.java.version}" arg2="19"/>
        </condition>
        <condition property="less.jdk21" value="true">
			<less arg1="${target.java.version}" arg2="21"/>
        </condition>
		<property name="qtjambi.isqt${qtjambi.soname.version.major}" value="true"/>
        <fileset id="qtjambi.autotest.classes" dir="${java.srcdir}/autotests">
            <include name="io/qt/**/Test${test.includes}.java"/>
            <exclude name="io/qt/**/TestJDK*.java"/>
            <exclude name="io/qt/**/Test*Qt6.java" unless="${qtjambi.isqt6}"/>
            <exclude name="io/qt/**/Test*Qt61.java" unless="${geq.qt61}"/>
            <exclude name="io/qt/**/Test*Qt62.java" unless="${geq.qt62}"/>
            <exclude name="io/qt/**/Test*Qt63.java" unless="${geq.qt63}"/>
            <exclude name="io/qt/**/Test*Qt64.java" unless="${geq.qt64}"/>
            <exclude name="io/qt/**/Test*Qt65.java" unless="${geq.qt65}"/>
            <exclude name="io/qt/**/Test*Qt66.java" unless="${geq.qt66}"/>
            <exclude name="io/qt/**/Test*Qt67.java" unless="${geq.qt67}"/>
            <exclude name="io/qt/**/Test*Qt68.java" unless="${geq.qt68}"/>
            <exclude name="io/qt/**/Test*Qt69.java" unless="${geq.qt69}"/>
            <exclude name="io/qt/**/Test*Qt610.java" unless="${geq.qt610}"/>
            <exclude name="io/qt/**/Test*Qt611.java" unless="${geq.qt611}"/>
            <exclude name="io/qt/**/Test*Qt612.java" unless="${geq.qt612}"/>
            <exclude name="io/qt/**/Test*Qt613.java" unless="${geq.qt613}"/>
            <exclude name="io/qt/**/Test*Qt614.java" unless="${geq.qt614}"/>
            <exclude name="io/qt/**/Test*Qt615.java" unless="${geq.qt615}"/>
            <exclude name="io/qt/**/Test*Qml.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/Test*ActiveX.java" unless="${qtjambi.activex.any.true}"/>
            <exclude name="io/qt/**/Test*OpenGL.java" unless="${qtjambi.opengl.any.true}"/>
            <exclude name="io/qt/**/Test*Auth.java" unless="${qtjambi.networkauth.any.true}"/>
            <exclude name="io/qt/**/Test*DBus.java" unless="${qtjambi.dbus.any.true}"/>
            <exclude name="io/qt/**/Test*Bluetooth.java" unless="${qtjambi.bluetooth.any.true}"/>
            <exclude name="io/qt/**/Test*Script.java" unless="${qtjambi.script.any.true}"/>
            <exclude name="io/qt/**/Test*ScriptTools.java" unless="${qtjambi.scripttools.any.true}"/>
            <exclude name="io/qt/**/TestUnknownType.java" unless="${qtjambi.webengine.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngine.java" unless="${qtjambi.webengine.any.true}"/>
            <exclude name="io/qt/**/Test*WebView.java" unless="${qtjambi.webview.any.true}"/>
            <exclude name="io/qt/**/Test*Concurrent.java" unless="${qtjambi.concurrent.any.true}"/>
            <exclude name="io/qt/**/Test*Network.java" unless="${qtjambi.network.any.true}"/>
            <exclude name="io/qt/**/Test*Designer.java" unless="${qtjambi.designer.any.true}"/>
            <exclude name="io/qt/**/Test*Gamepad.java" unless="${qtjambi.gamepad.any.true}"/>
            <exclude name="io/qt/**/Test*UiTools.java" unless="${qtjambi.uitools.any.true}"/>
            <exclude name="io/qt/**/Test*Xml.java" unless="${qtjambi.xml.any.true}"/>
            <exclude name="io/qt/**/Test*Help.java" unless="${qtjambi.help.any.true}"/>
            <exclude name="io/qt/**/Test*Multimedia.java" unless="${qtjambi.multimedia.any.true}"/>
            <exclude name="io/qt/**/Test*MultimediaWidgets.java" unless="${qtjambi.multimediawidgets.any.true}"/>
            <exclude name="io/qt/**/Test*MacExtras.java" unless="${qtjambi.macextras.any.true}"/>
            <exclude name="io/qt/**/Test*X11Extras.java" unless="${qtjambi.x11extras.any.true}"/>
            <exclude name="io/qt/**/Test*WinExtras.java" unless="${qtjambi.winextras.any.true}"/>
            <exclude name="io/qt/**/Test*Nfc.java" unless="${qtjambi.nfc.any.true}"/>
            <exclude name="io/qt/**/Test*OpenGL.java" unless="${qtjambi.opengl.any.true}"/>
            <exclude name="io/qt/**/Test*OpenGLWidgets.java" unless="${qtjambi.openglwidgets.any.true}"/>
            <exclude name="io/qt/**/Test*Positioning.java" unless="${qtjambi.positioning.any.true}"/>
            <exclude name="io/qt/**/Test*PrintSupport.java" unless="${qtjambi.printsupport.any.true}"/>
            <exclude name="io/qt/**/Test*Purchasing.java" unless="${qtjambi.purchsing.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DAnimation.java" unless="${qtjambi.qt3danimation.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DCore.java" unless="${qtjambi.qt3dcore.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DExtras.java" unless="${qtjambi.qt3dextras.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DInput.java" unless="${qtjambi.qt3dinput.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DLogic.java" unless="${qtjambi.qt3dlogic.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DQuick.java" unless="${qtjambi.qt3dquick.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DQuickExtras.java" unless="${qtjambi.qt3dquickextras.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DQuickScene2D.java" unless="${qtjambi.qt3dquickscene2d.any.true}"/>
            <exclude name="io/qt/**/Test*Qt3DRender.java" unless="${qtjambi.qt3drender.any.true}"/>
            <exclude name="io/qt/**/Test*Xmlpatterns.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/Test*XmlPatterns.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/Test*Charts.java" unless="${qtjambi.charts.any.true}"/>
            <exclude name="io/qt/**/Test*Graphs.java" unless="${qtjambi.graphs.any.true}"/>
            <exclude name="io/qt/**/Test*GraphsWidgets.java" unless="${qtjambi.graphswidgets.any.true}"/>
            <exclude name="io/qt/**/Test*InsightTracker.java" unless="${qtjambi.insighttracker.any.true}"/>
            <exclude name="io/qt/**/Test*DataVis.java" unless="${qtjambi.datavisualization.any.true}"/>
            <exclude name="io/qt/**/Test*DataVisualization.java" unless="${qtjambi.datavisualization.any.true}"/>
            <exclude name="io/qt/**/Test*SpatialAudio.java" unless="${qtjambi.spatialaudio.any.true}"/>
            <exclude name="io/qt/**/Test*HttpServer.java" unless="${qtjambi.httpserver.any.true}"/>
            <exclude name="io/qt/**/Test*Nfc.java" unless="${qtjambi.nfc.any.true}"/>
            <exclude name="io/qt/**/Test*Sql.java" unless="${qtjambi.sql.any.true}"/>
            <exclude name="io/qt/**/Test*SQL.java" unless="${qtjambi.sql.any.true}"/>
            <exclude name="io/qt/**/Test*3DCore.java" unless="${qtjambi.3dcore.any.true}"/>
            <exclude name="io/qt/**/Test*Quick3D.java" unless="${qtjambi.quick3d.any.true}"/>
            <exclude name="io/qt/**/Test*VirtualKeyboard.java" unless="${qtjambi.virtualkeyboard.any.true}"/>
            <exclude name="io/qt/**/Test*TestQ.java" unless="${qtjambi.test.any.true}"/>
            <exclude name="io/qt/**/Test*Testlib.java" unless="${qtjambi.test.any.true}"/>
            <exclude name="io/qt/**/Test*Qml.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/Test*Sensors.java" unless="${qtjambi.sensors.any.true}"/>
            <exclude name="io/qt/**/Test*Scxml.java" unless="${qtjambi.scxml.any.true}"/>
            <exclude name="io/qt/**/Test*WinExtras.java" unless="${qtjambi.winextras.any.true}"/>
            <exclude name="io/qt/**/Test*Quick.java" unless="${qtjambi.quick.any.true}"/>
            <exclude name="io/qt/**/Test*QuickControls.java" unless="${qtjambi.quickcontrols.any.true}"/>
            <exclude name="io/qt/**/Test*QuickWidgets.java" unless="${qtjambi.quickwidgets.any.true}"/>
            <exclude name="io/qt/**/Test*Location.java" unless="${qtjambi.location.any.true}"/>
            <exclude name="io/qt/**/Test*RemoteObjects.java" unless="${qtjambi.remoteobjects.any.true}"/>
            <exclude name="io/qt/**/Test*Statemachine.java" unless="${qtjambi.statemachine.any.true}"/>
            <exclude name="io/qt/**/Test*SerialBus.java" unless="${qtjambi.serialbus.any.true}"/>
            <exclude name="io/qt/**/Test*SerialPort.java" unless="${qtjambi.serialport.any.true}"/>
            <exclude name="io/qt/**/Test*Svg.java" unless="${qtjambi.svg.any.true}"/>
            <exclude name="io/qt/**/Test*SvgWidgets.java" unless="${qtjambi.svgwidgets.any.true}"/>
            <exclude name="io/qt/**/Test*TextToSpeech.java" unless="${qtjambi.texttospeech.any.true}"/>
            <exclude name="io/qt/**/Test*UITools.java" unless="${qtjambi.uitools.any.true}"/>
            <exclude name="io/qt/**/Test*WebChannel.java" unless="${qtjambi.webchannel.any.true}"/>
            <exclude name="io/qt/**/Test*WebChannelQuick.java" unless="${qtjambi.webchannelquick.any.true}"/>
            <exclude name="io/qt/**/TestWebChannelQuickOnEngine.java" unless="${qtjambi.webenginecore.any.true}"/>
            <exclude name="io/qt/**/TestWebChannelQuickOnView.java" unless="${qtjambi.webview.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngine.java" unless="${qtjambi.webengine.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngineCore.java" unless="${qtjambi.webenginecore.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngineQuick.java" unless="${qtjambi.webenginequick.any.true}"/>
            <exclude name="io/qt/**/Test*WebEngineWidgets.java" unless="${qtjambi.webenginewidgets.any.true}"/>
            <exclude name="io/qt/**/Test*WebSockets.java" unless="${qtjambi.websockets.any.true}"/>
            <exclude name="io/qt/**/Test*WebView.java" unless="${qtjambi.webview.any.true}"/>
            <exclude name="io/qt/**/Test*XmlPatterns.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/Test*Pdf.java" unless="${qtjambi.pdf.any.true}"/>
            <exclude name="io/qt/**/Test*PdfWidgets.java" unless="${qtjambi.pdfwidgets.any.true}"/>
            <exclude name="io/qt/**/TestActiveX*.java" unless="${qtjambi.activex.any.true}"/>
            <exclude name="io/qt/**/TestQml*.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/TestOpenGL*.java" unless="${qtjambi.opengl.any.true}"/>
            <exclude name="io/qt/**/TestAuth*.java" unless="${qtjambi.networkauth.any.true}"/>
            <exclude name="io/qt/**/QtDBus*.java" unless="${qtjambi.dbus.any.true}"/>
            <exclude name="io/qt/**/TestDBus*.java" unless="${qtjambi.dbus.any.true}"/>
            <exclude name="io/qt/**/TestBluetooth*.java" unless="${qtjambi.bluetooth.any.true}"/>
            <exclude name="io/qt/**/TestScript*.java" unless="${qtjambi.script.any.true}"/>
            <exclude name="io/qt/**/TestQScript*.java" unless="${qtjambi.script.any.true}"/>
            <exclude name="io/qt/**/TestWebEngineQuickQt5.java" unless="${qtjambi.webengine.any.true}"/>
            <exclude name="io/qt/**/TestWebEngineQ*.java" unless="${qtjambi.webenginequick.any.true}"/>
            <exclude name="io/qt/**/TestWebChannel*.java" unless="${qtjambi.webchannel.any.true}"/>
            <exclude name="io/qt/**/TestWebChannelQuick*.java" unless="${qtjambi.webchannelquick.any.true}"/>
            <exclude name="io/qt/**/TestWebView*.java" unless="${qtjambi.webview.any.true}"/>
            <exclude name="io/qt/**/TestConcurrent*.java" unless="${qtjambi.concurrent.any.true}"/>
            <exclude name="io/qt/**/TestNetwork*.java" unless="${qtjambi.network.any.true}"/>
            <exclude name="io/qt/**/TestQSsl*.java" unless="${qtjambi.network.any.true}"/>
            <exclude name="io/qt/**/TestDesigner*.java" unless="${qtjambi.designer.any.true}"/>
            <exclude name="io/qt/**/TestUiTools*.java" unless="${qtjambi.uitools.any.true}"/>
            <exclude name="io/qt/**/TestXml*.java" unless="${qtjambi.xml.any.true}"/>
            <exclude name="io/qt/**/TestHelp*.java" unless="${qtjambi.help.any.true}"/>
            <exclude name="io/qt/**/TestMultimedia*.java" unless="${qtjambi.multimedia.any.true}"/>
            <exclude name="io/qt/**/TestXmlpatterns*.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/TestXmlPatterns*.java" unless="${qtjambi.xmlpatterns.any.true}"/>
            <exclude name="io/qt/**/TestSql*.java" unless="${qtjambi.sql.any.true}"/>
            <exclude name="io/qt/**/TestSQL*.java" unless="${qtjambi.sql.any.true}"/>
            <exclude name="io/qt/**/Test3DCore*.java" unless="${qtjambi.3dcore.any.true}"/>
            <exclude name="io/qt/**/TestVirtualKeyboard*.java" unless="${qtjambi.virtualkeyboard.any.true}"/>
            <exclude name="io/qt/**/TestSpatialAudio*.java" unless="${qtjambi.spatialaudio.any.true}"/>
            <exclude name="io/qt/**/TestCharts*.java" unless="${qtjambi.charts.any.true}"/>
            <exclude name="io/qt/**/TestGraphs*.java" unless="${qtjambi.graphs.any.true}"/>
            <exclude name="io/qt/**/TestGraphsWidgets*.java" unless="${qtjambi.graphswidgets.any.true}"/>
            <exclude name="io/qt/**/TestInsightTracker*.java" unless="${qtjambi.insighttracker.any.true}"/>
            <exclude name="io/qt/**/TestDataVis*.java" unless="${qtjambi.datavisualization.any.true}"/>
            <exclude name="io/qt/**/TestQuick3D*.java" unless="${qtjambi.quick3d.any.true}"/>
            <exclude name="io/qt/**/TestQml*.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/TestSensors*.java" unless="${qtjambi.sensors.any.true}"/>
            <exclude name="io/qt/**/TestScxml*.java" unless="${qtjambi.scxml.any.true}"/>
            <exclude name="io/qt/**/TestWinExtras*.java" unless="${qtjambi.winextras.any.true}"/>
            <exclude name="io/qt/**/TestQuick*.java" unless="${qtjambi.quick.any.true}"/>
            <exclude name="io/qt/**/TestLocation*.java" unless="${qtjambi.location.any.true}"/>
			<exclude name="io/qt/**/TestPrintSupport*.java" unless="${qtjambi.printsupport.any.true}"/>
            <exclude name="io/qt/**/TestRemoteObjects*.java" unless="${qtjambi.remoteobjects.any.true}"/>
            <exclude name="io/qt/**/TestRemoteObjectsInjectedCodeQt5.java" unless="${qtjambi.remoteobjects.privateheaders.true}"/>
            <exclude name="io/qt/**/TestQmlVariant.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/TestQmlVariant.java" unless="${qtjambi.location.any.true}"/>
            <exclude name="io/qt/**/TestQtjambiCast*.java" unless="${qtjambi.qml.any.true}"/>
            <exclude name="io/qt/**/TestQTest*.java" unless="${qtjambi.test.any.true}"/>
            <exclude name="io/qt/**/TestTestlib*.java" unless="${qtjambi.test.any.true}"/>
			<exclude name="io/qt/**/TestHttpServer*.java" unless="${qtjambi.httpserver.any.true}"/>
            <exclude name="io/qt/**/TestQQmlListProperty.java" unless="${qtjambi.quick.any.true}"/>
            <exclude name="io/qt/**/TestBluetoothDiscovery.java"/>
            <exclude name="io/qt/**/TestQuickTextureMetalQt6.java"/>
        </fileset>
		<fileset id="qtjambi.autotest.jdkextended.classes" dir="${java.srcdir}/autotests">
            <include name="io/qt/**/TestJDK17${test.includes}.java" unless="${less.jdk17}"/>
            <include name="io/qt/**/TestJDK19${test.includes}.java" unless="${less.jdk19}"/>
        </fileset>
    </target>
    <property file="tests.properties"/>
    <property name="junit.exists" value="tests.junit.exists" />

    <target name="tests.clean-impl" depends="load-properties">
        <delete dir="${outputDir}/tests"/>
        <delete dir="${outputDir}/${qtjambi.osname}/tests/autotests"/>
        <delete dir="${outputDir}/${qtjambi.osname}/tests/auto"/>
        <delete dir="${outputDir}/tests"/>
        <delete dir="${outputDir}/${qtjambi.osname}/tests"/>
    </target>

    <target name="reports.clean" depends="load-properties" description="Cleans the Unit Test results">
        <delete dir="${outputDir}/${qtjambi.osname}/tests/junitxml-*"/>
        <delete dir="${outputDir}/${qtjambi.osname}/tests/TestResults-*"/>
    </target>

    <target name="check.junit">
		<if>
			<not>
				<available type="file" file="${resourcesdir}/junit.jar"/>
			</not>
			<then>
				<mkdir dir="${resourcesdir}"/>
				<get src="${junit.url}" dest="${resourcesdir}/junit.jar" verbose="true"/>
				<get src="${hamcrest.url}" dest="${resourcesdir}/hamcrest.jar" verbose="true"/>
			</then>
		</if>
        <available property="junit.path" type="file" file="${resourcesdir}/junit.jar"/>
        <fail message="Path to JUnit is required to build the Unit Tests. Specify the path in tests.properties">
            <condition>
                <not>
                    <isset property="junit.path"/>
                </not>
            </condition>
        </fail>
    </target>
    
    <target name="check.ssl">
        <available property="qtjambi.ssl" type="file" file="${generator.outputdir}/java/io/qt/network/QSslSocket.java"/>
    </target>

    <target name="compile.native.generator" unless="${skip-generate}" depends="init.build, load-properties, tools.generator.make">
        <mkdir dir="${outputDir}/tests"/>
        <generator dir="${generator.builddir}/../bin"
                importdirectories="generator/${psep}${basedir}/src/cpp/autotests"
                outputDirectory="${outputDir}/tests"
                generatorDirectory="${generator.builddir}/../bin"
				nullness="${qtjambi.generate.nullness}"
                qtlibdirectory="${generator.builddir}/../lib${psep}${tools.qt.libdir}"
                qtbindirectory="${generator.builddir}/../bin${psep}${tools.qt.bindir}"
				qtjambiVersion="${qtjambi.patchversion}"
                includeDirectories="${qtjambi.qt.includedir};${basedir}/src/cpp/QtJambiGenerator/targets;${basedir}/src/cpp/autotests${psep}${generator.includepaths}"
                typesystem="${basedir}/src/cpp/autotests/autotests.qml"
                header="${basedir}/src/cpp/autotests/autotests.h"
            />
        <antcall target="generate.uic"/>
    </target>

    <target name="generate.uic">
        <if>
            <available file="${deploymentdir}/qtjambi-uic-${qtjambi.jar.version}.jar" type="file"/>
            <then>
                <uic uifile="${java.srcdir}/autotests/io/qt/autotests/ui/uitest.ui"
                     targetpackage="io.qt.autotests.generated"
                     targetdirectory="${outputDir}/tests/java/autotests"
                     libfiles=""
                     connections=""/>
                <uic uifile="${java.srcdir}/autotests/io/qt/autotests/ui/bluetoothdevice.ui"
                     targetpackage="io.qt.autotests.generated"
                     targetdirectory="${outputDir}/tests/java/autotests"
                     libfiles=""
                     connections=""/>
                <uic uifile="${java.srcdir}/autotests/io/qt/autotests/ui/bluetoothservice.ui"
                     targetpackage="io.qt.autotests.generated"
                     targetdirectory="${outputDir}/tests/java/autotests"
                     libfiles=""
                     connections=""/>
            </then>
        </if>
    </target>
    <target name="compile.native" depends="init.build">
        <mkdir dir="${outputDir}/${qtjambi.osname}/tests/autotests"/>
        <qmake  dir="${outputDir}/${qtjambi.osname}/tests/autotests"
                pro="${basedir}/src/cpp/autotests/autotests.pro"
                config="${qtjambi.configuration}"
                qmakebinary="${qtjambi.qt.qmake.abspath}"/>
        <make dir="${outputDir}/${qtjambi.osname}/tests/autotests" target="${qtjambi.qmake.target.default}"/>
        <if>
            <os family="mac"/>
            <then>
                <install-name-tool dir="${outputDir}/${qtjambi.osname}/tests/lib/" libname="autotests" debug="false" suffix="jnilib"/>
                <install-name-tool dir="${outputDir}/${qtjambi.osname}/tests/lib/" libname="autotests" debug="true" suffix="jnilib"/>
            </then>
        </if>
		<if>
			<equals arg1="${qtjambi.osname}" arg2="ios"/>
			<then>
				<antcall inheritrefs="true" target="create-ios-bundles">
				</antcall>
			</then>
        </if>
		<if>
			<or>
				<equals arg1="${qtjambi.osname}" arg2="android"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
			</or>
			<then>
				<antcall inheritrefs="true" target="create-android-bundles">
					<param name="qtjambi.android.abi" value="armeabi-v7a"/>
					<param name="qtjambi.android.osname" value="android-arm"/>
				</antcall>
				<antcall inheritrefs="true" target="create-android-bundles">
					<param name="qtjambi.android.abi" value="arm64-v8a"/>
					<param name="qtjambi.android.osname" value="android-arm64"/>
				</antcall>
				<antcall inheritrefs="true" target="create-android-bundles">
					<param name="qtjambi.android.abi" value="x86"/>
					<param name="qtjambi.android.osname" value="android-x86"/>
				</antcall>
				<antcall inheritrefs="true" target="create-android-bundles">
					<param name="qtjambi.android.abi" value="x86_64"/>
					<param name="qtjambi.android.osname" value="android-x64"/>
				</antcall>
			</then>
		</if>
    </target>
	<target name="create-android-bundles">
		<if>
			<available file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_${qtjambi.android.abi}.so"/>
			<then>
				<mkdir dir="${outputDir}/${qtjambi.osname}/tests/lib/${qtjambi.android.abi}"/>
				<copy file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_${qtjambi.android.abi}.so" todir="${outputDir}/${qtjambi.osname}/tests/lib/${qtjambi.android.abi}"/>
				<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-native-${qtjambi.android.osname}-${qtjambi.jar.version}.jar" excludes="${jar.excludes}">
					<manifest>
						<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"             value="QtJambi Autotests natives ${qtjambi.android.osname}"/>
						<attribute name="Bundle-Description"      value="QtJambi Autotests natives ${qtjambi.android.osname}"/>
					</manifest>
					<fileset dir="${outputDir}/${qtjambi.osname}/tests" includes="lib/${qtjambi.android.abi}/libautotests_${qtjambi.android.abi}.so"/>
				</jar>
			</then>
		</if>
		<if>
			<available file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_debug_${qtjambi.android.abi}.so"/>
			<then>
				<mkdir dir="${outputDir}/${qtjambi.osname}/tests/lib/${qtjambi.android.abi}"/>
				<copy file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_debug_${qtjambi.android.abi}.so" todir="${outputDir}/${qtjambi.osname}/tests/lib/${qtjambi.android.abi}"/>
				<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-native-${qtjambi.android.osname}-debug-${qtjambi.jar.version}.jar" excludes="${jar.excludes}">
					<manifest>
						<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"             value="QtJambi Autotests natives ${qtjambi.android.osname}"/>
						<attribute name="Bundle-Description"      value="QtJambi Autotests natives ${qtjambi.android.osname}"/>
					</manifest>
					<fileset dir="${outputDir}/${qtjambi.osname}/tests" includes="lib/${qtjambi.android.abi}/libautotests_debug_${qtjambi.android.abi}.so"/>
				</jar>
			</then>
		</if>
    </target>
	<target name="create-ios-bundles">
		<if>
			<available file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests.a"/>
			<then>
				<mkdir dir="${outputDir}/${qtjambi.osname}/tests/"/>
				<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-native-ios-${qtjambi.jar.version}.jar" excludes="${jar.excludes}">
					<manifest>
						<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"             value="QtJambi Autotests natives iOS"/>
						<attribute name="Bundle-Description"      value="QtJambi Autotests natives iOS"/>
					</manifest>
					<fileset dir="${outputDir}/${qtjambi.osname}/tests" includes="lib/libautotests.a"/>
				</jar>
			</then>
		</if>
		<if>
			<available file="${outputDir}/${qtjambi.osname}/tests/lib/libautotests_debug.a"/>
			<then>
				<mkdir dir="${outputDir}/${qtjambi.osname}/tests/"/>
				<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-native-ios-debug-${qtjambi.jar.version}.jar" excludes="${jar.excludes}">
					<manifest>
						<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"             value="QtJambi Autotests natives iOS"/>
						<attribute name="Bundle-Description"      value="QtJambi Autotests natives iOS"/>
					</manifest>
					<fileset dir="${outputDir}/${qtjambi.osname}/tests" includes="lib/libautotests_debug.a"/>
				</jar>
			</then>
		</if>
    </target>

    <target name="compile.deps">
    </target>
    
    <target name="copy-resources">
        <copy todir="${test.java.outdir}" includeemptydirs="false">
            <fileset dir="${src}">
                <include name="**/*"/>
                <exclude name="**/.*"/>
                <exclude name="build.xml"/>
                <exclude name="**/*.java"/>
                <exclude name="**/*.jui"/>
                <exclude name="${jar.excludes}"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.java">
        <ant inheritrefs="true" target="compile.java.impl">
            <property name="module.suffix" value=""/>
            <property name="test.javaext.outdir" location="${outputDir}/${qtjambi.osname}/tests/javaext"/>
            <property name="test.javaext.srcoutdir" location="${outputDir}/${qtjambi.osname}/tests/javaext-src"/>
            <property name="test.javamd.outdir" location="${outputDir}/${qtjambi.osname}/tests/javamd"/>
            <property name="test.javamd.srcoutdir" location="${outputDir}/${qtjambi.osname}/tests/javamd-src"/>
            <property name="test.java.outdir" location="${outputDir}/${qtjambi.osname}/tests/java"/>
            <property name="test.java.srcoutdir" location="${outputDir}/${qtjambi.osname}/tests/java-src"/>
        </ant>
    </target>
    <target name="compile.plugins.java">
        <ant inheritrefs="true" target="compile.java.plugins.impl">
            <property name="module.suffix" value=""/>
            <property name="test.javaext.outdir" location="${outputDir}/${qtjambi.osname}/tests/javaext"/>
            <property name="test.javaext.srcoutdir" location="${outputDir}/${qtjambi.osname}/tests/javaext-src"/>
            <property name="test.java.outdir" location="${outputDir}/${qtjambi.osname}/tests/java"/>
            <property name="test.java.srcoutdir" location="${outputDir}/${qtjambi.osname}/tests/java-src"/>
        </ant>
    </target>
    <target name="compile.java.impl" depends="load-properties">
        <delete dir="${test.java.outdir}" failonerror="no"/>
        <mkdir dir="${test.java.outdir}"/>
        <delete dir="${test.java.srcoutdir}" failonerror="false"/>
        <mkdir dir="${test.java.srcoutdir}"/>
        <copy todir="${test.java.srcoutdir}">
            <fileset refid="qtjambi.autotest.classes"/>
        </copy>
        <copy todir="${test.java.srcoutdir}">
            <fileset dir="src/java/autotests">
                <include name="io/qt/**/*"/>
				<exclude name="io/qt/**/QtDBus*.java" unless="${qtjambi.dbus.any.true}"/>
				<exclude name="io/qt/**/QtRemoteObjects*.java" unless="${qtjambi.remoteobjects.any.true}"/>
				<exclude name="io/qt/qml*/**" unless="${qtjambi.qml.any.true}"/>
				<exclude name="io/qt/**/DeploymentSql.java" unless="${qtjambi.sql.any.true}"/>
				<exclude name="io/qt/**/qmlreg/*.java" unless="${qtjambi.qml.any.true}"/>
				<exclude name="io/qt/**/qmltypes/*.java" unless="${qtjambi.qml.any.true}"/>
                <exclude name="io/qt/**/Test*.java"/>
            </fileset>
        </copy>
		<echo>copying ${outputDir}/tests/java/autotests/*</echo>
        <copy todir="${test.java.srcoutdir}">
            <fileset dir="${outputDir}/tests/java/autotests" includes="*.java,io/qt/**/*.java">
				<exclude name="io/qt/**/AbstractSocketSubclass.java" unless="${qtjambi.network.any.true}"/>
				<exclude name="io/qt/**/SqlTableModelSubclass.java" unless="${qtjambi.sql.any.true}"/>
				<exclude name="io/qt/**/Xml*Subclass.java" unless="${qtjambi.xml.any.true}"/>
			</fileset>
        </copy>
        <delete dir="${test.javaext.outdir}" failonerror="no"/>
        <mkdir dir="${test.javaext.outdir}"/>
        <delete dir="${test.javaext.srcoutdir}" failonerror="false"/>
        <mkdir dir="${test.javaext.srcoutdir}"/>
        <copy todir="${test.javaext.srcoutdir}">
            <fileset refid="qtjambi.autotest.jdkextended.classes"/>
        </copy>
        <delete dir="${test.javamd.srcoutdir}" failonerror="false"/>
        <mkdir dir="${test.javamd.srcoutdir}"/>
        <copy todir="${test.javamd.srcoutdir}">
			<fileset dir="${java.srcdir}/autotests">
				<include name="module-info.java"/>
			</fileset>
        </copy>
		<if>
            <istrue value="${java.module.based}"/>
            <then>
				<javac destdir="${test.java.outdir}" debug="true" srcdir="${test.java.srcoutdir}"
						includeantruntime="false"
						source="${source.java.version}" target="${minimum.java.version}" encoding="UTF-8">
					<compilerarg value="-Xlint:-deprecation,-unchecked,-module,-options" />
					<classpath>
						<fileset dir="${deploymentdir}">
							<include name="qtjambi*-${qtjambi.jar.version}.jar"/>
							<exclude name="qtjambi-*native-*.jar"/>
						</fileset>
						<pathelement location="${resourcesdir}/junit.jar" />
						<pathelement location="${resourcesdir}/hamcrest.jar" />
						<pathelement location="${resourcesdir}/jsr305.jar"/>
						<pathelement location="${resourcesdir}/kotlin-annotations-jvm.jar"/>
					</classpath>
				</javac>
				<javac destdir="${test.java.outdir}" debug="true" srcdir="${test.javamd.srcoutdir}"
						includeantruntime="false"
						source="${source.java.version}" target="${minimum.java.version}" encoding="UTF-8">
					<compilerarg value="-Xlint:-deprecation,-unchecked,-module,-options" />
					<modulepath>
						<fileset dir="${deploymentdir}">
							<include name="qtjambi*-${qtjambi.jar.version}.jar"/>
							<exclude name="qtjambi-*native-*.jar"/>
						</fileset>
					</modulepath>
				</javac>
            </then>
			<else>
				<javac destdir="${test.java.outdir}" debug="true" srcdir="${test.java.srcoutdir}"
						includeantruntime="false" excludes="module-info.java"
						source="${source.java.version}" target="${minimum.java.version}" encoding="UTF-8">
					<compilerarg value="-Xlint:-deprecation,-unchecked,-options" />
					<classpath>
						<fileset dir="${deploymentdir}">
							<include name="qtjambi*-${qtjambi.jar.version}.jar"/>
							<exclude name="qtjambi-*native-*.jar"/>
						</fileset>
						<pathelement location="${resourcesdir}/junit.jar" />
						<pathelement location="${resourcesdir}/hamcrest.jar" />
						<pathelement location="${resourcesdir}/jsr305.jar"/>
						<pathelement location="${resourcesdir}/kotlin-annotations-jvm.jar"/>
					</classpath>
				</javac>
			</else>
        </if>
		<if>
			<not>
				<or>
					<istrue value="${less.jdk17}"/>
					<equals arg1="${qtjambi.osname}" arg2="android"/>
					<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
					<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
					<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
					<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
				</or>
			</not>
			<then>
				<javac destdir="${test.javaext.outdir}" debug="true" srcdir="${test.javaext.srcoutdir}"
						includeantruntime="false" encoding="UTF-8" source="${target.java.version}" target="${target.java.version}">
					<compilerarg value="-Xlint:-deprecation,-unchecked,-options,-preview" />
					<compilerarg value="--enable-preview" />
					<classpath>
						<fileset dir="${deploymentdir}">
							<include name="qtjambi*-${qtjambi.jar.version}.jar"/>
							<exclude name="qtjambi-*native-*.jar"/>
						</fileset>
						<pathelement location="${resourcesdir}/junit.jar" />
						<pathelement location="${resourcesdir}/hamcrest.jar" />
						<pathelement location="${resourcesdir}/jsr305.jar"/>
						<pathelement location="${resourcesdir}/kotlin-annotations-jvm.jar"/>
						<pathelement location="${test.java.outdir}" />
					</classpath>
				</javac>
			</then>
		</if>
        <antcall inheritrefs="true" target="copy-resources">
            <param name="src" value="${basedir}/src/java/autotests"/>
        </antcall>
		<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-${qtjambi.jar.version}.jar">
			<manifest>
				<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
				<attribute name="Bundle-Description"      value="QtJambi Autotests"/>
				<attribute name="Bundle-License"          value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1"/>
				<attribute name="Bundle-ManifestVersion"  value="2"/>
				<attribute name="Bundle-Name"             value="QtJambi Autotests"/>
				<attribute name="Bundle-RequiredExecutionEnvironment" value="${minimum.java.version}"/>
				<attribute name="Bundle-Version"          value="${qtjambi.version.bundle}"/>
				<attribute name="QtJambi-Plugin-Metadata" value="${plugin.metadata}"/>
				<attribute name="QtJambi-Plugin-Class"    value="${plugin.class.name}"/>
				<attribute name="QtJambi-Plugin-Name"    value="${module}"/>
			</manifest>
			<fileset dir="${test.java.outdir}"/>
			<fileset dir="${test.javaext.outdir}"/>
		</jar>
		<jar destfile="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-${qtjambi.jar.version}-sources.jar" excludes="${jar.excludes}">
			<manifest>
				<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
				<attribute name="Bundle-Name"             value="QtJambi Autotests sources"/>
				<attribute name="Bundle-Description"      value="QtJambi Autotests sources"/>
			</manifest>
			<fileset dir="${test.java.srcoutdir}" excludes="**/*.class"/>
			<fileset dir="${test.javaext.srcoutdir}" excludes="**/*.class"/>
		</jar>
    </target>
    <target name="compile.java.plugins.impl">
        <if>
            <istrue value="${qtjambi.qml.any.true}"/>
            <then>
                <ant antfile="${basedir}/src/java/qml/qml.xml" inheritrefs="true" target="build">
                    <property name="qtjambi.testbuild" value="true"/>
                    <property name="qtjambi-build" value="true"/>
                </ant>
            </then>
        </if>
        <ant antfile="${basedir}/src/java/plugins/plugins.xml" inheritrefs="true" target="build">
            <property name="qtjambi.testbuild" value="true"/>
            <property name="qtjambi-build" value="true"/>
        </ant>
        <if>
            <or>
                <equals arg1="${qtjambi.configuration}" arg2="release" />
                <equals arg1="${qtjambi.configuration}" arg2="test" />
                <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
            </or>
            <then>
                <if>
                    <istrue value="${qtjambi.qml.any.true}"/>
                    <then>
                        <ant antfile="${basedir}/src/java/qml/qml.xml" inheritrefs="true" target="build">
                            <property name="qtjambi.testbuild" value="true"/>
                            <property name="qtjambi-build" value="true"/>
                            <property name="platformjar.debug" value="false"/>
                            <property name="qtjambi.qml.bundle" value="true"/>
                            <property name="module.suffix" value=""/>
                        </ant>
                    </then>
                </if>
                <ant antfile="${basedir}/src/java/plugins/plugins.xml" inheritrefs="true" target="build">
                    <property name="qtjambi.testbuild" value="true"/>
                    <property name="qtjambi-build" value="true"/>
                    <property name="platformjar.debug" value="false"/>
                    <property name="qtjambi.plugin.bundle" value="true"/>
                    <property name="module.suffix" value=""/>
                </ant>
            </then>
        </if>
        <if>
            <or>
                <equals arg1="${qtjambi.configuration}" arg2="debug" />
                <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
            </or>
            <then>
                <if>
                    <istrue value="${qtjambi.qml.any.true}"/>
                    <then>
                        <ant antfile="${basedir}/src/java/qml/qml.xml" inheritrefs="true" target="build">
                            <property name="qtjambi.testbuild" value="true"/>
                            <property name="qtjambi-build" value="true"/>
                            <property name="platformjar.debug" value="true"/>
                            <property name="qtjambi.qml.bundle" value="true"/>
                        </ant>
                    </then>
                </if>
                <ant antfile="${basedir}/src/java/plugins/plugins.xml" inheritrefs="true" target="build">
                    <property name="qtjambi.testbuild" value="true"/>
                    <property name="qtjambi-build" value="true"/>
                    <property name="platformjar.debug" value="true"/>
                    <property name="qtjambi.plugin.bundle" value="true"/>
                </ant>
            </then>
        </if>
    </target>

    <target name="run.test" depends="check.junit, load-properties">
		<if>
			<or>
				<equals arg1="${qtjambi.osname}" arg2="ios"/>
				<equals arg1="${qtjambi.osname}" arg2="android"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
			</or>
			<then>
				<property name="classes" value="${toString:qtjambi.autotest.classes}"/>
				<stringreplace property="classes" target=".java" replacement=""/>
				<stringreplace property="classes" target="${sep}" replacement="."/>
				<stringreplace property="classes" target="${psep}" replacement="&quot;,&#10;&quot;"/>
				<echo>Test in ${qtjambi.osname} externally:</echo>
				<echo>&quot;${classes}&quot;</echo>
			</then>
			<else>
				<qtjambi-resolve-path var="absOutputDir"     path="${outputDir}" />
				<property name="jambiLib"      location="${deploymentdir}/platforms/${qtjambi.osname}/${kind}/lib"/>
				<property name="jambiBin"      location="${deploymentdir}/platforms/${qtjambi.osname}/${kind}/bin"/>
				<if>
					<equals arg1="${jdk-exec-version}" arg2="8"/>
					<then>
						<path id="qtjambi.autotest.classes.junit">
							<fileset refid="qtjambi.autotest.classes"/>
						</path>
						<property name="qtjambi.autotest.extended" value="qtjambi.autotest.empty"/>
						<if>
							<os family="windows"/>
							<then>
								<property name="test.jvm" location="${java8.home.target}/bin/java.exe"/>
							</then>
							<else>
								<property name="test.jvm" location="${java8.home.target}/bin/java"/>
							</else>
						</if>
						<if>
							<and>
								<not>
									<available file="${test.jvm}" type="file"/>
								</not>
								<istrue value="${check.jdk8}"/>
							</and>
							<then>
								<fail message="No jdk8 available. Please specify JAVA8_HOME_TARGET environment variable."/>
							</then>
						</if>
					</then>
					<else>
						<path id="qtjambi.autotest.classes.junit">
							<fileset refid="qtjambi.autotest.classes"/>
							<fileset refid="qtjambi.autotest.jdkextended.classes"/>
						</path>
						<if>
							<equals arg1="${jdk-exec-version}" arg2="arm64"/>
							<then>
								<property name="test.jvm" location="${java.arm64.home.target}/bin/java"/>
							</then>
							<else>
								<if>
									<equals arg1="${jdk-exec-version}" arg2="x64"/>
									<then>
										<property name="test.jvm" location="${java.x64.home.target}/bin/java"/>
									</then>
								</if>
							</else>
						</if>
						<if>
							<os family="windows"/>
							<then>
								<property name="test.jvm" location="${java.home.target}/bin/java.exe"/>
								<if>
									<equals arg1="${qtjambi.osname}" arg2="windows-arm64"/>
									<then>
										<loadproperties srcFile="${java.home.target}/release" prefix="fork-jvm">
											<filterchain>
												<linecontains>
													<contains value="OS_ARCH"/>
												</linecontains>
											</filterchain>
										</loadproperties>
										<if>
											<not>
												<equals arg1="${fork-jvm.OS_ARCH}" arg2="&quot;aarch64&quot;"/>
											</not>
											<then>
												<property name="skip-unittests" value="true"/>
											</then>
										</if>
									</then>
									<else>
										<if>
											<or>
												<equals arg1="${qtjambi.osname}" arg2="windows-x64"/>
												<equals arg1="${qtjambi.osname}" arg2="windows-llvm-mingw-x64"/>
												<equals arg1="${qtjambi.osname}" arg2="windows-mingw-x64"/>
											</or>
											<then>
												<loadproperties srcFile="${java.home.target}/release" prefix="fork-jvm">
													<filterchain>
														<linecontains>
															<contains value="OS_ARCH"/>
														</linecontains>
													</filterchain>
												</loadproperties>
												<if>
													<not>
														<equals arg1="${fork-jvm.OS_ARCH}" arg2="&quot;x86_64&quot;"/>
													</not>
													<then>
														<property name="skip-unittests" value="true"/>
													</then>
												</if>
											</then>
											<else>
											</else>
										</if>
									</else>
								</if>
							</then>
							<else>
								<property name="test.jvm" location="${java.home.target}/bin/java"/>
								<if>
									<equals arg1="${qtjambi.osname}" arg2="linux-arm64"/>
									<then>
										<loadproperties srcFile="${java.home.target}/release" prefix="fork-jvm">
											<filterchain>
												<linecontains>
													<contains value="OS_ARCH"/>
												</linecontains>
											</filterchain>
										</loadproperties>
										<if>
											<not>
												<equals arg1="${fork-jvm.OS_ARCH}" arg2="&quot;aarch64&quot;"/>
											</not>
											<then>
												<property name="skip-unittests" value="true"/>
											</then>
										</if>
									</then>
									<else>
										<if>
											<equals arg1="${qtjambi.osname}" arg2="linux-x64"/>
											<then>
												<loadproperties srcFile="${java.home.target}/release" prefix="fork-jvm">
													<filterchain>
														<linecontains>
															<contains value="OS_ARCH"/>
														</linecontains>
													</filterchain>
												</loadproperties>
												<if>
													<not>
														<equals arg1="${fork-jvm.OS_ARCH}" arg2="&quot;x86_64&quot;"/>
													</not>
													<then>
														<property name="skip-unittests" value="true"/>
													</then>
												</if>
											</then>
											<else>
											</else>
										</if>
									</else>
								</if>
							</else>
						</if>
						<if>
							<not>
								<available file="${test.jvm}" type="file"/>
							</not>
							<then>
								<property name="test.jvm" location="java"/>
							</then>
						</if>
					</else>
				</if>
				
				<if>
					<and>
						<not>
							<istrue value="${skip-unittests}"/>
						</not>
						<or>
							<equals arg1="${jdk-exec-version}" arg2=""/>
							<available file="${test.jvm}" type="file"/>
						</or>
					</and>
					<then>
						<if>
							<os family="windows"/>
							<then>
								<property name="qtPath"           location="${qtjambi.qt.bindir}" />
								<property name="qtJambiPath"      location="${deploymentdir}/platforms/${qtjambi.osname}/${kind}/bin" />
								<property name="testLibPath"      location="${outputDir}/${qtjambi.osname}/tests/bin" />
							</then>
							<else>
								<property name="qtPath"           location="${qtjambi.qt.libdir}" />
								<property name="qtJambiPath"      location="${deploymentdir}/platforms/${qtjambi.osname}/${kind}/lib" />
								<property name="testLibPath"      location="${outputDir}/${qtjambi.osname}/tests/lib" />
							</else>
						</if>
						<property name="qtjambiPluginPath"   location="${deploymentdir}/platforms/${qtjambi.osname}/${kind}/plugins" />
						<property name="testPluginPath"   location="${outputDir}/${qtjambi.osname}/tests/${kind}/plugins" />
						<property name="testQmlPath"   location="${outputDir}/${qtjambi.osname}/tests/${kind}/qml" />
						<condition property="qtjambi.enable-method-logs" value="true" else="false">
							<or>
								<istrue value="${qtjambi.debug.trace}"/>
								<istrue value="${qtjambi.enable-method-logs}"/>
							</or>
						</condition>
						<condition property="qtjambi.enable-dangling-pointer-check" value="true" else="false">
							<istrue value="${qtjambi.enable-dangling-pointer-check}"/>
						</condition>
						<condition property="qtjambi.enable-thread-affinity-check" value="true" else="false">
							<istrue value="${qtjambi.enable-thread-affinity-check}"/>
						</condition>
						<condition property="qtjambi.enable-event-thread-affinity-check" value="true" else="false">
							<istrue value="${qtjambi.enable-event-thread-affinity-check}"/>
						</condition>
						<if>
							<available type="file" file="${resourcesdir}/sqlite-jdbc.jar"/>
							<then>
							</then>
							<else>
								<mkdir dir="${resourcesdir}"/>
								<trycatch>
									<try>
										<get src="${sqlite.jdbc.download.url}" dest="${resourcesdir}/sqlite-jdbc.jar" verbose="true"/>
									</try>
									<catch>
										<echo>Unable to download ${sqlite.jdbc.download.url}</echo>
									</catch>
								</trycatch>
							</else>
						</if>
						<property name="testJdbcPath"   location="${resourcesdir}/sqlite-jdbc.jar" />
						<if>
							<available type="file" file="${resourcesdir}/jna.jar"/>
							<then>
							</then>
							<else>
								<mkdir dir="${resourcesdir}"/>
								<trycatch>
									<try>
										<get src="${jna.lib.download.url}" dest="${resourcesdir}/jna.jar" verbose="true"/>
									</try>
									<catch>
										<echo>Unable to download ${jna.lib.download.url}</echo>
									</catch>
								</trycatch>
							</else>
						</if>
						<if>
							<os family="mac"/>
							<then>
								<property name="XstartOnFirstThread" value="-XstartOnFirstThread" />
								<if>
									<and>
										<or>
											<equals arg1="${jdk-exec-version}" arg2="x64"/>
											<equals arg1="${jdk-exec-version}" arg2=""/>
										</or>
										<or>
											<less arg1="6" arg2="${qtjambi.soname.version.major}"/>
											<and>
												<equals arg1="${qtjambi.soname.version.major}" arg2="6"/>
												<or>
													<less arg1="5" arg2="${qtjambi.soname.version.minor}"/>
													<and>
														<equals arg1="${qtjambi.soname.version.major}" arg2="5"/>
														<less arg1="5" arg2="${qtjambi.soname.version.patch}"/>
													</and>
												</or>
											</and>
										</or>
									</and>
									<then>
										<property name="SYSTEM_VERSION_COMPAT" value="SYSTEM_VERSION_COMPAT" />
									</then>
									<else>
										<property name="SYSTEM_VERSION_COMPAT" value="_" />
									</else>
								</if>
							</then>
							<else>
								<property name="XstartOnFirstThread" value="-Dx" />
								<property name="SYSTEM_VERSION_COMPAT" value="_" />
							</else>
						</if>
						<if>
							<not>
								<isset property="test"/>
							</not>
							<then>
								<delete dir="${outputDir}/${qtjambi.osname}/tests/junitxml-${kind}${jdk-exec-version}" failonerror="false"/>
							</then>
						</if>
						<condition property="Xcheck_jni" value="-Xcheck:jni" else="-Dx">
							<istrue value="${jnicheck}"/>
						</condition>
						<condition property="Dskip-deletion" value="-Dqtjambi.deployer.skip.deletion=${qtjambi.deployer.skip.deletion}" else="-Dx">
							<isset property="qtjambi.deployer.skip.deletion"/>
						</condition>
						<condition property="Ddelay" value="-Dtest.delay=${test.delay}" else="-Dx">
							<isset property="test.delay"/>
						</condition>
						<condition property="Dattach" value="-Dtest.attach=${test.attach}" else="-Dx">
							<isset property="test.attach"/>
						</condition>
						<condition property="Dkeep-temp-deployment" value="-Dio.qt.keep-temp-deployment=${io.qt.keep-temp-deployment}" else="-Dx">
							<isset property="io.qt.keep-temp-deployment"/>
						</condition>
						<condition property="Ddeploymentdir" value="-Dio.qt.deploymentdir=${io.qt.deploymentdir}" else="-Dx">
							<isset property="io.qt.deploymentdir"/>
						</condition>
						<condition property="enablepreview" value="-Dx" else="--enable-preview">
							<equals arg1="${jdk-exec-version}" arg2="8"/>
						</condition>
						<condition property="Dqtjambi.log-level" value="-Dqtjambi.log-level=${qtjambi.log-level}" else="-Dx">
							<isset property="qtjambi.log-level"/>
						</condition>
						<condition property="Dio.qt.enable-dangling-pointer-check" value="-Dio.qt.enable-dangling-pointer-check=${io.qt.enable-dangling-pointer-check}" else="-Dx">
							<isset property="io.qt.enable-dangling-pointer-check"/>
						</condition>
						<condition property="Dio.qt.enable-thread-affinity-check" value="-Dio.qt.enable-thread-affinity-check=${io.qt.enable-thread-affinity-check}" else="-Dx">
							<isset property="io.qt.enable-thread-affinity-check"/>
						</condition>
						<condition property="Dio.qt.enable-event-thread-affinity-check" value="-Dio.qt.enable-event-thread-affinity-check=${io.qt.enable-event-thread-affinity-check}" else="-Dx">
							<isset property="io.qt.enable-event-thread-affinity-check"/>
						</condition>
						<condition property="Dio.qt.enable-method-logs" value="-Dio.qt.enable-method-logs=${io.qt.enable-method-logs}" else="-Dx">
							<isset property="io.qt.enable-method-logs"/>
						</condition>
						<condition property="Dio.qt.enable-cleanup-logs" value="-Dio.qt.enable-cleanup-logs=${io.qt.enable-cleanup-logs}" else="-Dx">
							<isset property="io.qt.enable-cleanup-logs"/>
						</condition>
						<condition property="Dio.qt.enable-event-logs" value="-Dio.qt.enable-event-logs=${io.qt.enable-event-logs}" else="-Dx">
							<isset property="io.qt.enable-event-logs"/>
						</condition>
						<condition property="Dio.qt.enable-metaobject-logs" value="-Dio.qt.enable-metaobject-logs=${io.qt.enable-metaobject-logs}" else="-Dx">
							<isset property="io.qt.enable-metaobject-logs"/>
						</condition>
						<condition property="Dio.qt.internal.disable-metalambdas" value="-Dio.qt.internal.disable-metalambdas=${io.qt.internal.disable-metalambdas}" else="-Dx">
							<isset property="io.qt.internal.disable-metalambdas"/>
						</condition>
						<condition property="JVMArg.enable.native.access" value="-Dx" else="--enable-native-access=ALL-UNNAMED">
							<less arg1="${target.java.version}" arg2="21"/>
						</condition>
						<trycatch>
							<try>
								<mkdir dir="${outputDir}/${qtjambi.osname}/tests/junitxml-${kind}${jdk-exec-version}"/>
								<junit fork="yes" jvm="${test.jvm}" printsummary="true" dir="${outputDir}/${qtjambi.osname}/tests/${kind}/" haltonfailure="no" timeout="${qtjambi.junit.timeout}" showoutput="yes" logfailedtests="yes" threads="${qtjambi.junit.threads}">
									<classpath>
										<fileset dir="${deploymentdir}">
											<include name="qtjambi*-${qtjambi.jar.version}.jar"/>
											<exclude name="qtjambi-*native-*.jar"/>
										</fileset>
										<pathelement location="${resourcesdir}/junit.jar" />
										<pathelement location="${resourcesdir}/hamcrest.jar" />
										<pathelement location="${resourcesdir}/sqlite-jdbc.jar" />
										<pathelement location="${resourcesdir}/jna.jar" />
										<pathelement path="${outputDir}/${qtjambi.osname}/tests/qtjambi-autotests-${qtjambi.jar.version}.jar" />
									</classpath>
									<jvmarg value="-Dio.qt.library-path-override=${qtPath}${psep}${qtJambiPath}${psep}${testLibPath}"/>
									<jvmarg value="-Dio.qt.debug=${kind}"/><!-- This should not be needed now, it loads default from MANIFEST.MF -->
									<jvmarg value="-Dqtjambi.osname=${qtjambi.osname}"/>
									<jvmarg value="-Dio.qt.log-messages=ALL"/>
									<jvmarg value="${Dqtjambi.log-level}"/>
									<jvmarg value="-Dio.qt.no-deployment-spec=true"/>
									<jvmarg value="${Dio.qt.enable-dangling-pointer-check}"/>
									<jvmarg value="${Dio.qt.enable-thread-affinity-check}"/>
									<jvmarg value="${Dio.qt.enable-event-thread-affinity-check}"/>
									<jvmarg value="${Dio.qt.enable-method-logs}"/>
									<jvmarg value="${Dio.qt.enable-cleanup-logs}"/>
									<jvmarg value="${Dio.qt.enable-event-logs}"/>
									<jvmarg value="${Dio.qt.enable-metaobject-logs}"/>
									<jvmarg value="${Dio.qt.internal.disable-metalambdas}"/>
									<jvmarg value="-Dio.qt.qml-imports=${testQmlPath}"/>
									<jvmarg value="-Dio.qt.pluginpath=${qtjambiPluginPath}${psep}${testPluginPath}"/>
									<jvmarg value="${XstartOnFirstThread}"/>
									<jvmarg value="${JVMArg.enable.native.access}"/>
									<jvmarg value="-Dqtjambi.deployer.test.jdbc=${testJdbcPath}"/>
									<!--jvmarg value="-Xrs"/-->
									<!-- This stops JVM intercepting SIGSEGV
									from native code (so we can see where/why it crashed) otherwise
									the JVM may promote SIGSEGV to NullPointerException, which is
									not that useful for debugging. -->
									<jvmarg value="${Xcheck_jni}"/>
									<jvmarg value="${Dskip-deletion}"/>
									<jvmarg value="${Ddelay}"/>
									<jvmarg value="${Dattach}"/>
									<jvmarg value="${Dkeep-temp-deployment}"/>
									<jvmarg value="${Ddeploymentdir}"/>
									<jvmarg value="${enablepreview}"/>
									<jvmarg value="-Dx-verbose:class"/>
									<env key="${SYSTEM_VERSION_COMPAT}" value="0"/>
									<env key="QT_MULTIMEDIA_PREFERRED_PLUGINS" value="Test"/>
									<!--env key="QML_IMPORT_PATH" value="${absQtPath}/../qml"/-->
						<!--            <jvmarg value="-verbose"/> -->
									<formatter type="xml" usefile="yes" />
									<batchtest fork="yes" todir="${outputDir}/${qtjambi.osname}/tests/junitxml-${kind}${jdk-exec-version}">
										<path refid="qtjambi.autotest.classes.junit"/>
									</batchtest>
								</junit>
							</try>
							<catch throwable="java.lang.Throwable" print="true">
							</catch>
							<finally>
								<modify-test-results dir="${outputDir}/${qtjambi.osname}/tests/junitxml-${kind}${jdk-exec-version}" version="${qtjambi.jar.version}" mode="${kind}" jdk="${jdk-exec-os}"/>
							</finally>
						</trycatch>
					</then>
				</if>
            </else>
        </if>
    </target>

    <target name="run">
        <if>
            <available file="${deploymentdir}/platforms/${qtjambi.osname}/debug" type="dir"/>
            <then>
                <antcall target="debug.run"/>
            </then>
            <else>
                <if>
                    <available file="${deploymentdir}/native/qtjambi-native-${qtjambi.osname}-${qtjambi.jar.version}.jar" type="file"/>
                    <then>
                        <antcall target="release.run"/>
                    </then>
                    <else>
                        <fail message="No build available."/>
                    </else>
                </if>
            </else>
        </if>
    </target>
    
    <target name="release.run">
        <if>
            <available file="${deploymentdir}/native/qtjambi-native-${qtjambi.osname}-${qtjambi.jar.version}.jar" type="file"/>
            <then>
                <if>
                    <os family="mac"/>
                    <then>
                        <if>
                            <isset property="java.arm64.home.target"/>
                            <then>
                                <antcall target="run.test">
                                    <param name="jdk-exec-version" value="arm64"/>
                                    <param name="jdk-exec-os" value="${qtjambi.osname}-arm64"/>
                                    <param name="kind"          value="release"/>
                                    <param name="dbgsuffix"          value=""/>
                                </antcall>
                            </then>
                        </if>
                        <if>
                            <isset property="java.x64.home.target"/>
                            <then>
                                <antcall target="run.test">
                                    <param name="jdk-exec-version" value="x64"/>
                                    <param name="jdk-exec-os" value="${qtjambi.osname}-x64"/>
                                    <param name="kind"          value="release"/>
                                    <param name="dbgsuffix"          value=""/>
                                </antcall>
                            </then>
                        </if>
                    </then>
                    <else>
                        <antcall target="run.test">
                            <param name="jdk-exec-version" value=""/>
                            <param name="jdk-exec-os" value="${qtjambi.osname}"/>
                            <param name="kind"          value="release"/>
                                    <param name="dbgsuffix"          value=""/>
                        </antcall>
                    </else>
                </if>
            </then>
            <else>
                <fail message="No release build available."/>
            </else>
        </if>
    </target>
    
    <target name="debug.run">
        <if>
            <available file="${deploymentdir}/platforms/${qtjambi.osname}/debug" type="dir"/>
            <then>
                <if>
                    <os family="mac"/>
                    <then>
                        <if>
                            <isset property="java.arm64.home.target"/>
                            <then>
                                <antcall target="run.test">
                                    <param name="jdk-exec-version" value="arm64"/>
									<param name="jdk-exec-os" value="${qtjambi.osname}-arm64"/>
                                    <param name="kind"          value="debug"/>
                                    <param name="dbgsuffix"          value="_debug"/>
                                </antcall>
                            </then>
                        </if>
                        <if>
                            <isset property="java.x64.home.target"/>
                            <then>
                                <antcall target="run.test">
                                    <param name="jdk-exec-version" value="x64"/>
                                    <param name="jdk-exec-os" value="${qtjambi.osname}-x64"/>
                                    <param name="kind"          value="debug"/>
                                    <param name="dbgsuffix"          value="_debug"/>
                                </antcall>
                            </then>
                        </if>
                    </then>
                    <else>
                        <antcall target="run.test">
                            <param name="jdk-exec-version" value=""/>
                            <param name="jdk-exec-os" value="${qtjambi.osname}"/>
                            <param name="kind"          value="debug"/>
							<param name="dbgsuffix"          value="_debug"/>
                        </antcall>
                    </else>
                </if>
            </then>
            <else>
                <fail message="No debug build available."/>
            </else>
        </if>
    </target>
    
    <target name="release.run8">
        <if>
            <available file="${deploymentdir}/platforms/${qtjambi.osname}/release" type="dir"/>
            <then>
                <antcall target="run.test">
                    <param name="jdk-exec-version" value="8"/>
					<param name="jdk-exec-os" value="${qtjambi.osname}-JRE8"/>
                    <param name="kind"             value="release"/>
					<param name="dbgsuffix"          value=""/>
                </antcall>
            </then>
            <else>
                <fail message="No release build available."/>
            </else>
        </if>
    </target>
    
    <target name="debug.run8">
        <if>
            <available file="${deploymentdir}/platforms/${qtjambi.osname}/debug" type="dir"/>
            <then>
                <antcall target="run.test">
                    <param name="jdk-exec-version" value="8"/>
					<param name="jdk-exec-os" value="${qtjambi.osname}-JRE8"/>
                    <param name="kind"          value="debug"/>
					<param name="dbgsuffix"          value="_debug"/>
                </antcall>
            </then>
            <else>
                <fail message="No debug build available."/>
            </else>
        </if>
    </target>
    
    <target name="tests.report.impl">
        <delete dir="${basedir}/TestResults" failonerror="false"/>
        <mkdir dir="${basedir}/TestResults"/>
        <junitreport todir="${basedir}/TestResults">
            <fileset dir="${basedir}">
                <include name="*/build/*/tests/junitxml-*/TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${basedir}/TestResults" />
        </junitreport>
    </target>
    
    <target name="tests.generate-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.native.generator, compile.native, compile.java, compile.plugins.java"/>

    <target name="tests.compile-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.native, compile.java, compile.plugins.java"/>
            
    <target name="tests.compile.native-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.native"/>
            
    <target name="tests.compile.java-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.java"/>

    <target name="tests.compile.plugins-impl"
            depends="init.build, compile.deps, check.junit, check.ssl, compile.plugins.java"/>

    <target name="tests.run-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="run"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.run.all-impl" depends="init.build">
        <trycatch>
            <try>
				<if>
					<available file="${deploymentdir}/platforms/${qtjambi.osname}/release" type="dir"/>
					<then>
						<antcall target="release.run"/>
					</then>
				</if>
				<if>
					<available file="${deploymentdir}/platforms/${qtjambi.osname}/debug" type="dir"/>
					<then>
						<antcall target="debug.run"/>
					</then>
				</if>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.release.run-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="release.run"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.debug.run-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="debug.run"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.release.run8-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="release.run8">
                    <param name="check.jdk8" value="true"/>
                </antcall>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.debug.run8-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="debug.run8">
                    <param name="check.jdk8" value="true"/>
                </antcall>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>

    <target name="tests.release.run.all-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="release.run"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>
    
    <target name="tests.debug.run.all-impl" depends="init.build">
        <trycatch>
            <try>
                <antcall target="debug.run"/>
            </try>
            <finally>
                <if>
                    <not>
                        <istrue value="${skip.report}"/>
                    </not>
                    <then>
                        <antcall target="tests.report.impl"/>
                    </then>
                </if>
                <antcall target="finished"/>
            </finally>
        </trycatch>
    </target>
</project>
