<!--===============================================================================================
==
== Copyright (C) 2009-2025 Dr. Peter Droste, Omix Visualization GmbH & Co. KG. All rights reserved.
==
== This file is part of Qt Jambi.
==
== $BEGIN_LICENSE$
==
== GNU Lesser General Public License Usage
== This file may be used under the terms of the GNU Lesser
== General Public License version 2.1 as published by the Free Software
== Foundation and appearing in the file LICENSE.LGPL included in the
== packaging of this file.  Please review the following information to
== ensure the GNU Lesser General Public License version 2.1 requirements
== will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
==
== GNU General Public License Usage
== Alternatively, this file may be used under the terms of the GNU
== General Public License version 3.0 as published by the Free Software
== Foundation and appearing in the file LICENSE.GPL included in the
== packaging of this file.  Please review the following information to
== ensure the GNU General Public License version 3.0 requirements will be
== met: http://www.gnu.org/copyleft/gpl.html.
==
== $END_LICENSE$
==
== This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
== WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
==
================================================================================================-->
<project default="build">
    <target name="build">
        <if>
            <istrue value="${qtjambi.testbuild}"/>
            <then>
                <property name="destdir" value="${outputDir}/${qtjambi.osname}/tests/jar" />
                <subant target="build" inheritall="true" verbose="true">
                    <filelist dir="${basedir}/src/java/plugins" files="customwidgets,multimediawidgets,helpwidgets"/>
                </subant>
            </then>
            <else>
                <property name="destdir" value="${deploymentdir}" />
                <subant target="build" inheritall="true" verbose="true">
                    <filelist dir="${basedir}/src/java/plugins" files="qsqljdbc"/>
                </subant>
            </else>
        </if>
    </target>
    <target name="bundle-plugin">
        <if>
            <istrue value="${qtjambi.testbuild}"/>
            <then>
                <if>
                    <istrue value="${platformjar.debug}" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="true"/>
                            <param name="debug.conf" value="debug"/>
                            <param name="platformjar.debug.suffix" value="-debug"/>
                            <param name="plugindestdir" value="${outputDir}/${qtjambi.osname}/tests/debug"/>
                        </antcall>
                    </then>
                    <else>
                        <antcall target="bundle-plugin-impl">
                            <param name="debug.conf" value="release"/>
                            <param name="platformjar.debug.suffix" value=""/>
                            <param name="plugindestdir" value="${outputDir}/${qtjambi.osname}/tests/release"/>
                        </antcall>
                    </else>
                </if>
            </then>
            <else>
                <if>
                    <istrue value="${platformjar.debug}" />
                    <then>
                        <antcall target="bundle-plugin-impl">
                            <param name="isdebug" value="true"/>
                            <param name="debug.conf" value="debug"/>
                            <param name="platformjar.debug.suffix" value="-debug"/>
                            <param name="plugindestdir" value="${deploymentdir}/platforms/${qtjambi.osname}/debug"/>
                        </antcall>
                    </then>
                    <else>
                        <antcall target="bundle-plugin-impl">
                            <param name="debug.conf" value="release"/>
                            <param name="platformjar.debug.suffix" value=""/>
                            <param name="plugindestdir" value="${deploymentdir}/platforms/${qtjambi.osname}/release"/>
                        </antcall>
                    </else>
                </if>
            </else>
        </if>
    </target>
    <target name="bundle-plugin-impl">
		<condition property="plugindeploymentdir" value="${outputDir}/${qtjambi.osname}/tests" else="${outputDir}/plugins">
			<istrue value="${qtjambi.testbuild}"/>
		</condition>
		<if>
			<available file="${plugindeploymentdir}/${module}.jar" type="file"/>
			<then>
				<mkdir dir="${plugindestdir}/plugins/${plugin-subdir}"/>
				<if>
					<os family="mac"/>
					<then>
						<property name="XstartOnFirstThread" value="-XstartOnFirstThread" />
					</then>
					<else>
						<property name="XstartOnFirstThread" value="-Dx" />
					</else>
				</if>
				<pathconvert property="librarypath">
					<path>
						<pathelement location="${tools.qt.bindir}"/>
						<pathelement location="${tools.qt.libdir}"/>
					</path>
				</pathconvert>
				<property name="moduledot" value="qtjambi.plugin.${module}"/>
				<stringreplace property="moduledot" target="-" replacement="."/>
				<property name="moduledash" value="qtjambi-plugin-${module}"/>
				<stringreplace property="moduledash" target="." replacement="-"/>
				<if>
					<equals arg1="${qtjambi.osname}" arg2="android"/>
					<then>
						<antcall inheritrefs="true" target="create-native-plugin-deployment-impl">
							<param name="targetdirname" value="android"/>
							<param name="qtjambi.osname" value="android-arm"/>
						</antcall>
						<antcall inheritrefs="true" target="create-native-plugin-deployment-impl">
							<param name="targetdirname" value="android"/>
							<param name="qtjambi.osname" value="android-arm64"/>
						</antcall>
						<antcall inheritrefs="true" target="create-native-plugin-deployment-impl">
							<param name="targetdirname" value="android"/>
							<param name="qtjambi.osname" value="android-x86"/>
						</antcall>
						<antcall inheritrefs="true" target="create-native-plugin-deployment-impl">
							<param name="targetdirname" value="android"/>
							<param name="qtjambi.osname" value="android-x64"/>
						</antcall>
					</then>
					<else>
						<antcall inheritrefs="true" target="create-native-plugin-deployment-impl">
							<param name="targetdirname" value="${qtjambi.osname}"/>
						</antcall>
					</else>
				</if>
			</then>
			<else>
				<echo>plugin not available: ${plugindeploymentdir}/${module}.jar</echo>
			</else>
		</if>
    </target>
    <target name="create-native-plugin-deployment-impl">
        <condition property="JVMArg.enable.native.access" value="-Dx" else="--enable-native-access=qtjambi,ALL-UNNAMED">
			<less arg1="${target.java.version}" arg2="21"/>
        </condition>
		<if>
			<istrue value="${qtjambi.pluginloader.build.from.source}"/>
			<then>
				<trycatch>
					<try>
						<delete dir="${outputDir}/${qtjambi.osname}/tmp" failonerror="false"/>
						<if>
							<istrue value="${java.module.based}"/>
							<then>
								<java fork="true" jvm="${tools.jvm}" module="qtjambi.deployer" failonerror="true">
									<jvmarg value="-Djava.library.path=${librarypath}"/>
									<jvmarg value="-Dio.qt.deploymentdir=${outputDir}/${qtjambi.osname}/tmp"/>
									<jvmarg value="${XstartOnFirstThread}"/>
									<jvmarg value="${JVMArg.enable.native.access}"/>
									<!--jvmarg value="-Xint"/>
									<jvmarg value="-Xrs"/>
									<jvmarg value="-Xcheck:jni"/-->
									<jvmarg value="-Dio.qt.log-messages=ALL"/>
									<jvmarg value="-Djava.util.logging.config.file=${basedir}/logging.properties"/>
									<arg value="plugin" />
									<arg value="--source" />
									<arg value="--configuration=${debug.conf}" />
									<arg value="--dir=${plugins.builddir}" />
									<arg value="--subdir=${plugin-subdir}" />
									<arg value="--class-path=${plugindeploymentdir}/${module}.jar" />
									<arg value="--platform=${qtjambi.osname}" />
									<arg value="--plugin-library-location=${qtjambi.builddir}/lib/" />
									<env key="DYLD_FRAMEWORK_PATH" value="${librarypath}" />
									<modulepath>
										<fileset dir="${deploymentdir}" includes="qtjambi-${qtjambi.jar.version}.jar,qtjambi-deployer-${qtjambi.jar.version}.jar,${qtjambi-libfiles}"/>
									</modulepath>
								</java>
							</then>
							<else>
								<java fork="true" jvm="${tools.jvm}" classname="io.qt.qtjambi.deployer.Main" failonerror="true">
									<jvmarg value="-Djava.library.path=${librarypath}"/>
									<jvmarg value="-Dio.qt.deploymentdir=${outputDir}/${qtjambi.osname}/tmp"/>
									<jvmarg value="${XstartOnFirstThread}"/>
									<!--jvmarg value="-Xint"/>
									<jvmarg value="-Xrs"/>
									<jvmarg value="-Xcheck:jni"/-->
									<jvmarg value="-Dio.qt.log-messages=ALL"/>
									<jvmarg value="-Djava.util.logging.config.file=${basedir}/logging.properties"/>
									<arg value="plugin" />
									<arg value="--source" />
									<arg value="--configuration=${debug.conf}" />
									<arg value="--dir=${plugins.builddir}" />
									<arg value="--subdir=${plugin-subdir}" />
									<arg value="--class-path=${plugindeploymentdir}/${module}.jar" />
									<arg value="--platform=${qtjambi.osname}" />
									<arg value="--plugin-library-location=${qtjambi.builddir}/lib/" />
									<env key="DYLD_FRAMEWORK_PATH" value="${librarypath}" />
									<classpath>
										<fileset dir="${deploymentdir}" includes="qtjambi-${qtjambi.jar.version}.jar,qtjambi-deployer-${qtjambi.jar.version}.jar,${qtjambi-libfiles}"/>
									</classpath>
								</java>
							</else>
						</if>
					</try>
					<finally>
						<delete dir="${outputDir}/${qtjambi.osname}/tmp" failonerror="false"/>
					</finally>
				</trycatch>
				<qmake recursive="true"
					  dir="${plugins.builddir}/${module}"
					  pro="${plugins.builddir}/${module}/plugin.pro"
					  config="${debug.conf}"
					  qmakebinary="${qtjambi.qt.qmake.abspath}"/>
				<make dir="${plugins.builddir}/${module}" target="${qtjambi.qmake.target.default}"/>
				<if>
					<equals arg1="${qtjambi.osplatform}" arg2="windows"/>
					<then>
						<if>
							<istrue value="${isdebug}"/>
							<then>
								<move file="${plugins.builddir}/${module}/bin/${module}d.dll" todir="${plugindestdir}/plugins/${plugin-subdir}"/>
							</then>
							<else>
								<move file="${plugins.builddir}/${module}/bin/${module}.dll" todir="${plugindestdir}/plugins/${plugin-subdir}"/>
							</else>
						</if>
					</then>
				</if>
				<if>
					<equals arg1="${qtjambi.osplatform}" arg2="macos"/>
					<then>
						<move file="${plugins.builddir}/${module}/lib/lib${module}.dylib" todir="${plugindestdir}/plugins/${plugin-subdir}"/>
					</then>
				</if>
				<if>
					<istrue value="${qtjambi.osplatform.islinuxorunix}"/>
					<then>
						<if>
							<istrue value="${isdebug}"/>
							<then>
								<move file="${plugins.builddir}/${module}/lib/lib${module}_debug.so" todir="${plugindestdir}/plugins/${plugin-subdir}"/>
							</then>
							<else>
								<move file="${plugins.builddir}/${module}/lib/lib${module}.so" todir="${plugindestdir}/plugins/${plugin-subdir}"/>
							</else>
						</if>
					</then>
				</if>
				<move file="${plugins.builddir}/${module}/${module}.jar" 
					  todir="${plugindestdir}/plugins/${plugin-subdir}"/>
			</then>
			<else>
				<trycatch>
					<try>
						<delete dir="${outputDir}/${qtjambi.osname}/tmp" failonerror="false"/>
						<if>
							<istrue value="${java.module.based}"/>
							<then>
								<java fork="true" jvm="${tools.jvm}" module="qtjambi.deployer" failonerror="true">
									<jvmarg value="-Djava.library.path=${librarypath}"/>
									<jvmarg value="-Dio.qt.deploymentdir=${outputDir}/${qtjambi.osname}/tmp"/>
									<jvmarg value="${XstartOnFirstThread}"/>
									<jvmarg value="${JVMArg.enable.native.access}"/>
									<!--jvmarg value="-Dqtjambi.log-level=ALL"/-->
									<!--jvmarg value="-Xint"/>
									<jvmarg value="-Xrs"/>
									<jvmarg value="-Xcheck:jni"/-->
									<jvmarg value="-Dio.qt.log-messages=ALL"/>
									<jvmarg value="-Djava.util.logging.config.file=${basedir}/logging.properties"/>
									<arg value="plugin" />
									<arg value="--configuration=${debug.conf}" />
									<arg value="--dir=${plugindestdir}" />
									<arg value="--subdir=${plugin-subdir}" />
									<arg value="--class-path=${plugindeploymentdir}/${module}.jar" />
									<arg value="--platform=${qtjambi.osname}" />
									<arg value="--plugin-library-location=${qtjambi.builddir}/lib/" />
									<env key="DYLD_FRAMEWORK_PATH" value="${librarypath}" />
									<modulepath>
										<fileset dir="${deploymentdir}" includes="qtjambi-${qtjambi.jar.version}.jar,qtjambi-deployer-${qtjambi.jar.version}.jar,${qtjambi-libfiles}"/>
									</modulepath>
								</java>
							</then>
							<else>
								<java fork="true" jvm="${tools.jvm}" classname="io.qt.qtjambi.deployer.Main" failonerror="true">
									<jvmarg value="-Djava.library.path=${librarypath}"/>
									<jvmarg value="-Dio.qt.deploymentdir=${outputDir}/${qtjambi.osname}/tmp"/>
									<jvmarg value="${XstartOnFirstThread}"/>
									<!--jvmarg value="-Dqtjambi.log-level=ALL"/-->
									<!--jvmarg value="-Xint"/>
									<jvmarg value="-Xrs"/>
									<jvmarg value="-Xcheck:jni"/-->
									<jvmarg value="-Dio.qt.log-messages=ALL"/>
									<jvmarg value="-Djava.util.logging.config.file=${basedir}/logging.properties"/>
									<arg value="plugin" />
									<arg value="--configuration=${debug.conf}" />
									<arg value="--dir=${plugindestdir}" />
									<arg value="--subdir=${plugin-subdir}" />
									<arg value="--class-path=${plugindeploymentdir}/${module}.jar" />
									<arg value="--platform=${qtjambi.osname}" />
									<arg value="--plugin-library-location=${qtjambi.builddir}/lib/" />
									<env key="DYLD_FRAMEWORK_PATH" value="${librarypath}" />
									<classpath>
										<fileset dir="${deploymentdir}" includes="qtjambi-${qtjambi.jar.version}.jar,qtjambi-deployer-${qtjambi.jar.version}.jar,${qtjambi-libfiles}"/>
									</classpath>
								</java>
							</else>
						</if>
					</try>
					<finally>
						<delete dir="${outputDir}/${qtjambi.osname}/tmp" failonerror="false"/>
					</finally>
				</trycatch>
			</else>
		</if>
		<if>
			<equals arg1="${qtjambi.osplatform}" arg2="android"/>
			<then>
				<if>
					<istrue value="${qtjambi.testbuild}"/>
					<then>
						<mkdir dir="${outputDir}/${targetdirname}/tests"/>
						<copy file="${plugindeploymentdir}/${module}.jar" 
							  tofile="${outputDir}/${targetdirname}/tests/${moduledash}-native-android-common-${qtjambi.jar.version}.jar"/>
						<copy file="${plugindeploymentdir}/${module}-sources.jar" 
							  tofile="${outputDir}/${targetdirname}/tests/${moduledash}-native-android-common-${qtjambi.jar.version}-sources.jar"/>
					</then>
					<else>
						<copy file="${plugindestdir}/plugins/${plugin-subdir}/${module}.jar" 
							  tofile="${deploymentdir}/native/${moduledash}-native-android-common-${qtjambi.jar.version}.jar"/>
						<copy file="${outputDir}/plugins/${module}-sources.jar" 
							  tofile="${deploymentdir}/sources/${moduledash}-native-android-common-${qtjambi.jar.version}-sources.jar"/>
						<echo>create empty ${deploymentdir}/javadocs/${moduledash}-native-android-common-${qtjambi.jar.version}-javadoc.jar</echo>
						<delete file="${deploymentdir}/javadocs/${moduledash}-native-android-common-${qtjambi.jar.version}-javadoc.jar"/>
						<jar destfile="${deploymentdir}/javadocs/${moduledash}-native-android-common-${qtjambi.jar.version}-javadoc.jar" whenmanifestonly="create">
							<manifest>
								<attribute name="Built-By" value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
								<attribute name="Bundle-Name"      value="QtJambi ${module} plugin javadoc"/>
								<attribute name="Bundle-Description"      value="QtJambi ${module} plugin javadoc"/>
								<attribute name="Bundle-ManifestVersion" value="2"/>
							</manifest>
						</jar>
					</else>
				</if>
			</then>
		</if>
		<if>
			<or>
				<not>
					<istrue value="${qtjambi.testbuild}"/>
				</not>
				<equals arg1="${qtjambi.osplatform}" arg2="android"/>
			</or>
			<then>
				<if>
					<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
					<then>
						<property name="jar-includes" value="lib/armeabi-v7a/libplugins_${plugin-subdir}_${module}_armeabi-v7a.so"/>
					</then>
					<else>
						<if>
							<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
							<then>
								<property name="jar-includes" value="lib/arm64-v8a/libplugins_${plugin-subdir}_${module}_arm64-v8a.so"/>
							</then>
							<else>
								<if>
									<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
									<then>
										<property name="jar-includes" value="lib/x86_64/libplugins_${plugin-subdir}_${module}_x86_64.so"/>
									</then>
									<else>
										<if>
											<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
											<then>
												<property name="jar-includes" value="lib/x86/libplugins_${plugin-subdir}_${module}_x86.so"/>
											</then>
											<else>
												<property name="jar-includes" value="plugins/${plugin-subdir}/*,META-INF/qtjambi-deployment.xml"/>
												<create-native-deployment outputDirectory="${plugindestdir}" 
																			debug="${isdebug}" 
																			module="${moduledot}" 
																			libraries="${plugin-subdir}" 
																			plugin="true" 
																			jarFile=""
																			forcedebuginfo="${qtjambi.force.debug.info}"/>
											</else>
										</if>
									</else>
								</if>
							</else>
						</if>
					</else>
				</if>
				<if>
					<and>
						<or>
							<isfalse value="${platformjar.debug}"/>
							<istrue value="${qtjambi.debug.bundles}"/>
						</or>
						<not>
							<equals arg1="${jar-includes}" arg2=""/>
						</not>
					</and>
					<then>
						<condition property="plugintargetdir" value="${outputDir}/${targetdirname}/tests" else="${deploymentdir}/native">
							<istrue value="${qtjambi.testbuild}"/>
						</condition>
						<jar destfile="${plugintargetdir}/${moduledash}-native-${qtjambi.osname}${platformjar.debug.suffix}-${qtjambi.jar.version}.jar">
							<manifest>
								<attribute name="Built-By" value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
								<attribute name="Bundle-Name"      value="QtJambi ${module} plugin platform bundle"/>
								<attribute name="Bundle-Description"      value="QtJambi ${module} plugin platform bundle"/>
								<attribute name="Bundle-License"         value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999"/>
								<attribute name="Bundle-Version"         value="${qtjambi.version.bundle}"/>
								<attribute name="Bundle-ManifestVersion" value="2"/>
							</manifest>
							<fileset dir="${plugindestdir}" includes="${jar-includes}"/>
						</jar>
					</then>
				</if>
				<delete file="${plugindestdir}/META-INF/qtjambi-deployment.xml"/>
			</then>
		</if>
    </target>
    <target name="jar_init">
        <fail message="'module' is not set!">
            <condition>
                <not>
                    <isset property="module"/>
                </not>
            </condition>
        </fail>
    </target>
    
    <target name="compile-plugin" depends="jar_init">
        <echo message="Compiling java classes: ${java.srcdir}/${module} excludes: ${module.excludes}"/>
        <pathconvert pathsep=","
            property="multiroot.basedirs">
            <path refid="sourcedirs"/>
        </pathconvert>
        <mkdir dir="${deploymentdir}"/>
        <delete dir="${java.outdir}/plugins/${module}" failonerror="no"/>
        <mkdir dir="${java.outdir}/plugins/${module}"/>
        <copy todir="${java.outdir}/plugins/${module}" includeemptydirs="false">
            <multirootfileset basedirs="${multiroot.basedirs}"
                              excludes="**/.*,
                                                pom.xml,
                                                build.xml,
                                                build.properties,
                                                **/*.java,
                                                **/*.jui,
                                                ${jar.excludes},
                                                ${qtjambi.jar.excludes}" erroronmissingdir="false"/>
        </copy>
        <condition property="module.info.exclude" value="" else="module-info.java">
            <istrue value="${java.module.based}"/>
        </condition>
        <copy todir="${java.outsrcdir}/plugins/${module}" includeemptydirs="false">
            <multirootfileset basedirs="${multiroot.basedirs}" 
                              excludes="pom.xml,
                                                    build.xml,
                                                    build.properties,
                                                    ${jar.excludes},
                                                    ${module.info.exclude},
                                                    ${module.excludes},
                                                    ${qtjambi.jar.excludes}" erroronmissingdir="false"/>
        </copy>
        <pathconvert pathsep="${psep}"
            property="sourcedirs2">
            <path refid="sourcedirs"/>
        </pathconvert>
        <dependencies-to-classpath property="qtjambi.dependencies" jarversion="${qtjambi.jar.version}" dependencies="${qtjambi.required.modules}"/>
        <if>
            <istrue value="${java.module.based}"/>
            <then>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        executable="${tools.javac}" fork="true" 
						memorymaximumsize="1024m" verbose="false"
                        includeantruntime="false"
                        excludes="${module.excludes}"
                        srcdir="${sourcedirs2}"
                        destdir="${java.outdir}/plugins/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <compilerarg value="-Xlint:-module,-options" />
                    <modulepath>
                        <fileset dir="${deploymentdir}" includes="${qtjambi.dependencies}"/>
                    </modulepath>
                </javac>
            </then>
            <else>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        executable="${tools.javac}" fork="true" 
						memorymaximumsize="1024m" verbose="false"
                        includeantruntime="false"
                        srcdir="${sourcedirs2}"
                        excludes="${module.excludes},module-info.java"
                        destdir="${java.outdir}/plugins/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <classpath>
                        <fileset dir="${deploymentdir}" includes="${qtjambi.dependencies}"/>
                    </classpath>
                </javac>
            </else>
        </if>
		<condition property="plugindeploymentdir" value="${outputDir}/${qtjambi.osname}/tests" else="${outputDir}/plugins">
			<istrue value="${qtjambi.testbuild}"/>
		</condition>
		<echo message="Creating JAR file for ${module}"/>
		<delete file="${plugindeploymentdir}/${module}.jar" verbose="true"/>
		<mkdir dir="${plugindeploymentdir}"/>
		<jar destfile="${plugindeploymentdir}/${module}.jar" excludes="${jar.excludes}">
			<manifest>
				<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
				<attribute name="Bundle-Description"      value="QtJambi Plugin ${module}"/>
				<attribute name="Bundle-License"          value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1"/>
				<attribute name="Bundle-ManifestVersion"  value="2"/>
				<attribute name="Bundle-Name"             value="QtJambi Plugin ${module}"/>
				<attribute name="Bundle-RequiredExecutionEnvironment" value="${minimum.java.version}"/>
				<attribute name="Bundle-Version"          value="${qtjambi.version.bundle}"/>
				<attribute name="QtJambi-Plugin-Metadata" value="${plugin.metadata}"/>
				<attribute name="QtJambi-Plugin-Class"    value="${plugin.class.name}"/>
				<attribute name="QtJambi-Plugin-Name"    value="${module}"/>
			</manifest>
			<fileset dir="${java.outdir}/plugins/${module}"/>
		</jar>
		<jar destfile="${plugindeploymentdir}/${module}-sources.jar" excludes="${jar.excludes}">
			<manifest>
				<attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
				<attribute name="Bundle-Name"             value="QtJambi Plugin ${module} sources"/>
				<attribute name="Bundle-Description"      value="QtJambi Plugin ${module} sources"/>
			</manifest>
			<fileset dir="${java.outsrcdir}/plugins/${module}" excludes="**/*.class"/>
		</jar>
    </target>

    <target name="build-plugin">
        <if>
            <istrue value="${qtjambi-build}"/>
            <then>
                <if>
                    <istrue value="${qtjambi.plugin.bundle}"/>
                    <then>
                        <antcall inheritrefs="true" target="bundle-plugin"/>
                    </then>
                    <else>
                        <antcall inheritrefs="true" target="compile-plugin"/>
                    </else>
                </if>
            </then>
        </if>
        <if>
            <istrue value="${qtjambi-deploy}"/>
            <then>
                <create-pom outputDirectory="${deploymentdir}" description="${qtjambi.module.description}" dependencies="${qtjambi.required.modules}" libraries="${qtjambi.bundle.libraries}" module="qtjambi-plugin-${module}"/>
                <antcall inheritrefs="true" target="deploy-impl"/>
            </then>
        </if>
        <if>
            <istrue value="${qtjambi-deploy-bundle}"/>
            <then>
                <antcall inheritrefs="true" target="deploy-impl-bundle"/>
            </then>
        </if>
    </target>
    
    <target name="deploy-impl-bundle">
        <mkdir dir="${deploymentdir}/bundles"/>
        <condition property="snap" value="-SNAPSHOT" else="">
            <istrue value="${qtjambi-deploy-snapshot}"/>
        </condition>
        <property name="moduledash" value="qtjambi-plugin-${module}"/>
        <stringreplace property="moduledash" target="." replacement="-"/>
        <foreach-native dir="${deploymentdir}/native" module="${moduledash}" version="${qtjambi.jar.version}" target="deploy-plugin-impl-bundle-native"/>
        <!--delete file="${deploymentdir}/pom.xml"/-->
    </target>
    <target name="deploy-plugin-impl-bundle-native">
        <if>
            <not>
                <available file="${deploymentdir}/native/${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}.pom"/>
            </not>
            <then>
                <create-pom outputDirectory="${deploymentdir}" description="${qtjambi.module.description}" dependencies="${qtjambi.required.modules}" libraries="${qtjambi.bundle.libraries}" module="qtjambi-plugin-${module}"/>
            </then>
        </if>
        <if>
            <and>
                <istrue value="${qtjambi-deploy-snapshot}"/>
                <not>
                    <available file="${deploymentdir}/native/${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}.jar"/>
                </not>
            </and>
            <then>
                <copy file="${deploymentdir}/native/${moduledash}-native-${native-spec}-${qtjambi.jar.version}.jar" tofile="${deploymentdir}/${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}.jar"/>
            </then>
        </if>
        <gpg bundle="${deploymentdir}/bundles/${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}-bundle.zip">
            <fileset dir="${deploymentdir}/native/" includes="${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}*.jar" followsymlinks="false"/>
            <fileset dir="${deploymentdir}/native/" includes="${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}*.pom" followsymlinks="false"/>
            <fileset dir="${deploymentdir}/sources/" includes="${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}*.jar" followsymlinks="false" erroronmissingdir="false"/>
            <fileset dir="${deploymentdir}/javadocs/" includes="${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}*.jar" followsymlinks="false" erroronmissingdir="false"/>
        </gpg>
		<if>
			<available file="${deploymentdir}/bundles/${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}-bundle.zip"/>
			<then>
				<echo>Leaving ${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}-bundle.zip unchanged.</echo>
			</then>
			<else>
				<zip destfile="${deploymentdir}/bundles/${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}-bundle.zip">
					<zipfileset dir="${deploymentdir}/native/" includes="${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}*" followsymlinks="false" prefix="io/qtjambi/${moduledash}-native-${native-spec}/${qtjambi.jar.version}${snap}"/>
					<zipfileset dir="${deploymentdir}/sources/" includes="${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}*" followsymlinks="false" prefix="io/qtjambi/${moduledash}-native-${native-spec}/${qtjambi.jar.version}${snap}" erroronmissingdir="false"/>
					<zipfileset dir="${deploymentdir}/javadocs/" includes="${moduledash}-native-${native-spec}-${qtjambi.jar.version}${snap}*" followsymlinks="false" prefix="io/qtjambi/${moduledash}-native-${native-spec}/${qtjambi.jar.version}${snap}" erroronmissingdir="false"/>
				</zip>
			</else>
		</if>
    </target>
    <target name="deploy-impl">
        <if>
            <istrue value="${qtjambi-deploy-snapshot}"/>
            <then>
                <property name="moduledash" value="qtjambi-plugin-${module}"/>
                <stringreplace property="moduledash" target="." replacement="-"/>
                <foreach-native dir="${deploymentdir}/native" module="${moduledash}" version="${qtjambi.jar.version}" target="qtjambi-deploy-plugins-snapshot-native"/>
            </then>
        </if>
    </target>
    <target name="qtjambi-deploy-plugins-snapshot-native">
        <copy file="${deploymentdir}/native/${moduledash}-native-${native-spec}-${qtjambi.jar.version}.jar" tofile="${deploymentdir}/native/${moduledash}-native-${native-spec}-${qtjambi.jar.version}-SNAPSHOT.jar"/>
    </target>
</project>
