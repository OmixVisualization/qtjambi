<project default="build">
    <target name="build">
        <if>
            <istrue value="${qtjambi.testbuild}"/>
            <then>
                <subant target="build" inheritall="true" verbose="true">
                    <filelist dir="${basedir}/src/java/qml" files="testcar,testgarage"/>
                </subant>
            </then>
            <else>
                <!--subant target="build" inheritall="true" verbose="true">
                    <filelist dir="${basedir}/src/java/qml" files=""/>
                </subant-->
            </else>
        </if>
    </target>
    <target name="jar_init">
        <fail message="'module' is not set!">
            <condition>
                <not>
                    <isset property="module"/>
                </not>
            </condition>
        </fail>
    </target>
    
    <target name="copy-resources">
        <mkdir dir="${java.outdir}/qml/${module}"/>
        <copy todir="${java.outdir}/qml/${module}" includeemptydirs="false">
            <fileset dir="${modulesrc}">
                <include name="**/*"/>
                <exclude name="**/.*"/>
                <exclude name="build.xml"/>
                <exclude name="**/*.java"/>
                <exclude name="**/*.jui"/>
                <exclude name="${jar.excludes}"/>
            </fileset>
        </copy>
    </target>

    <target name="copy-src-resources">
        <mkdir dir="${java.outsrcdir}/qml/${module}"/>
        <copy todir="${java.outsrcdir}/qml/${module}" includeemptydirs="false">
            <fileset dir="${modulesrc}">
                <include name="**/*"/>
                <exclude name="build.xml"/>
                <exclude name="${jar.excludes}"/>
            </fileset>
        </copy>
    </target>

    <target name="build-qml">
        <if>
            <istrue value="${qtjambi.qml.bundle}"/>
            <then>
                <antcall inheritrefs="true" target="bundle-qml"/>
            </then>
            <else>
                <antcall inheritrefs="true" target="compile-qml"/>
            </else>
        </if>
    </target>
    <target name="compile-qml" depends="jar_init">
        <echo message="Compiling java classes: ${java.srcdir}/qml/${module} excludes: ${module.excludes}"/>
        <pathconvert pathsep=","
            property="multiroot.basedirs">
            <path refid="sourcedirs"/>
        </pathconvert>
        <mkdir dir="${deploymentdir}"/>
        <delete dir="${java.outdir}/qml/${module}" failonerror="no"/>
        <mkdir dir="${java.outdir}/qml/${module}"/>
        <copy todir="${java.outdir}/qml/${module}" includeemptydirs="false">
            <multirootfileset basedirs="${multiroot.basedirs}"
                              excludes="**/.*,
                                                pom.xml,
                                                build.xml,
                                                build.properties,
                                                **/*.java,
                                                **/*.jui,
                                                ${jar.excludes},
                                                ${qtjambi.jar.excludes}"/>
        </copy>
        <condition property="module.info.exclude" value="" else="module-info.java">
            <istrue value="${java.module.based}"/>
        </condition>
        <copy todir="${java.outsrcdir}/qml/${module}" includeemptydirs="false">
            <multirootfileset basedirs="${multiroot.basedirs}" 
                              excludes="pom.xml,
                                                    build.xml,
                                                    build.properties,
                                                    ${jar.excludes},
                                                    ${module.info.exclude},
                                                    ${module.excludes},
                                                    ${qtjambi.jar.excludes}"/>
        </copy>
        <pathconvert pathsep="${psep}"
            property="sourcedirs2">
            <path refid="sourcedirs"/>
        </pathconvert>
        <dependencies-to-classpath property="qtjambi.dependencies" jarversion="${qtjambi.jar.version}" dependencies="${qtjambi.required.modules}"/>
        <if>
            <istrue value="${java.module.based}"/>
            <then>
                <javac source="8" target="8" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="false"
                        srcdir="${sourcedirs2}"
                        excludes="${module.excludes},module-info.java"
                        destdir="${java.outdir}/qml/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <compilerarg value="-Xlint:-module,-options" />
                    <classpath>
                        <fileset dir="${deploymentdir}" includes="${qtjambi.dependencies}"/>
                    </classpath>
                </javac>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="false"
                        srcdir="${sourcedirs2}"
                        includes="module-info.java"
                        destdir="${java.outdir}/qml/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <compilerarg value="-Xlint:-module,-options" />
                    <modulepath>
                        <fileset dir="${deploymentdir}" includes="${qtjambi.dependencies}"/>
                    </modulepath>
                </javac>
            </then>
            <else>
                <javac source="${source.java.version}" target="${minimum.java.version}" debug="true" deprecation="true"
                        fork="true" memorymaximumsize="1024m" verbose="false"
                        includeantruntime="false"
                        srcdir="${sourcedirs2}"
                        excludes="${module.excludes},module-info.java"
                        destdir="${java.outdir}/qml/${module}">
                    <compilerarg value="-Xlint:deprecation" />
                    <compilerarg value="-Xlint:unchecked" />
                    <classpath>
                        <fileset dir="${deploymentdir}" includes="${qtjambi.dependencies}"/>
                    </classpath>
                </javac>
            </else>
        </if>
        <echo message="Creating JAR file for ${module}"/>
        <if>
            <equals arg1="${qtjambi.configuration}" arg2="debug_and_release" />
            <then>
                <antcall target="createjarimpl">
                    <param name="subdir" value="release"/>
                    <param name="dbgsuffix" value=""/>
                    <param name="platformjar.debug.suffix" value=""/>
                    <param name="libisdebug" value="false"/>
                </antcall>
                <antcall target="createjarimpl">
                    <param name="subdir" value="debug"/>
                    <param name="dbgsuffix" value="_debug"/>
                    <param name="platformjar.debug.suffix" value="-debug"/>
                    <param name="libisdebug" value="true"/>
                </antcall>
            </then>
        </if>
        <if>
            <equals arg1="${qtjambi.configuration}" arg2="release" />
            <then>
                <antcall target="createjarimpl">
                    <param name="subdir" value="release"/>
                    <param name="dbgsuffix" value=""/>
                    <param name="platformjar.debug.suffix" value=""/>
                    <param name="libisdebug" value="false"/>
                </antcall>
            </then>
        </if>

        <if>
            <equals arg1="${qtjambi.configuration}" arg2="test" />
            <then>
                <antcall target="createjarimpl">
                    <param name="subdir" value="release"/>
                    <param name="dbgsuffix" value=""/>
                    <param name="platformjar.debug.suffix" value=""/>
                    <param name="libisdebug" value="false"/>
                </antcall>
            </then>
        </if>
        <if>
            <equals arg1="${qtjambi.configuration}" arg2="debug" />
            <then>
                <antcall target="createjarimpl">
                    <param name="subdir" value="debug"/>
                    <param name="dbgsuffix" value="_debug"/>
                    <param name="platformjar.debug.suffix" value="-debug"/>
                    <param name="libisdebug" value="true"/>
                </antcall>
            </then>
        </if>
    </target>

    <target name="bundle-qml">
    </target>

    <target name="createjarimpl">
        <condition property="destdir" value="${outputDir}/${qtjambi.osname}/tests/${subdir}" else="${qtjambi.builddir}">
            <istrue value="${qtjambi.testbuild}"/>
        </condition>
        <jar destfile="${outputDir}/${qtjambi.osname}/tests/${module}.jar" excludes="${jar.excludes}">
            <manifest>
                <attribute name="Built-By"                value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
<!--                <attribute name="Bundle-Activator"       value="io.qt.qtjambi.${qtjambi.osplatform}.${qtjambi.configuration}.osgi.Activator"/> -->
                <attribute name="Bundle-Description"      value="QtJambi Common API Bundle (${qtjambi.osname} ${qtjambi.configuration})"/>
                <!-- TODO: qtjambi.png -->
                <!-- <attribute name="Bundle-Icon"             value="qtjambi.png"/> -->
                <attribute name="Bundle-License"          value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999 with Nokia Qt LGPL Exception version 1.0"/>
<!--                <attribute name="Bundle-Localization"    value="plugin"/> -->
                <attribute name="Bundle-ManifestVersion"  value="2"/>
                <attribute name="Bundle-Name"             value="QtJambi Common API Bundle (${qtjambi.osname} ${qtjambi.configuration})"/>
                <attribute name="Bundle-RequiredExecutionEnvironment" value="${minimum.java.version}"/>
                <attribute name="Bundle-SymbolicName"     value="io.qt.qtjambi.${qtjambi.osname}${qtjambi.configuration.osgi};singleton:=true"/>
                <attribute name="Bundle-Version"          value="${qtjambi.version.bundle}"/>
                <attribute name="Require-Capability"      value="gui.ws.qtjambi.native;filter:=&quot;(&amp;(osplatform=${qtjambi.osplatform})(oscpu=${qtjambi.oscpu})(compiler=${qtjambi.compiler})(configuration=release))&quot;"/>
                <attribute name="Require-Bundle"          value="io.qt.qtjambi.native.${qtjambi.osplatform}.${qtjambi.oscpu}.${qtjambi.compiler}${qtjambi.configuration.osgi};version=${qtjambi.version.bundle}"/>
                <attribute name="X-QtJambi-Arch"          value="${qtjambi.osname}"/>
                <attribute name="X-QtJambi-Build"         value="${qtjambi.configuration}"/><!-- release debug test -->
                <attribute name="X-QtJambi-Version"       value="${qtjambi.version.bundle}"/>
                <attribute name="X-QtJambi-SoName-Version" value="${qtjambi.soname.version.major}"/>
            </manifest>
            <fileset dir="${java.outdir}/qml/${module}"/>
        </jar>
        <pathconvert property="librarypath">
            <path id="librarypath">
                <pathelement location="${qtjambi.builddir}/lib/"/>
                <pathelement location="${tools.qt.bindir}"/>
                <pathelement location="${tools.qt.libdir}"/>
            </path>
        </pathconvert>
        <if>
            <os family="mac"/>
            <then>
                <property name="XstartOnFirstThread" value="-XstartOnFirstThread" />
            </then>
            <else>
                <property name="XstartOnFirstThread" value="-Dx" />
            </else>
        </if>
        <if>
            <istrue value="${libisdebug}"/>
            <then>
                <property name="debug.conf" value="debug" />
            </then>
            <else>
                <property name="debug.conf" value="release" />
            </else>
        </if>
        <java fork="true" classname="io.qt.qtjambi.deployer.Main" failonerror="true">
            <jvmarg value="-Djava.library.path=${librarypath}"/>
            <!--jvmarg value="-Dio.qt.no-deployment-spec=true"/-->
            <!--jvmarg value="-Dio.qt.debug=${debug.conf}"/-->
            <jvmarg value="${XstartOnFirstThread}"/>
            <!--jvmarg value="-Xint"/>
            <jvmarg value="-Xrs"/>
            <jvmarg value="-Xcheck:jni"/-->
            <arg value="qml" />
            <arg value="--library=${outputDir}/${qtjambi.osname}/tests/${module}.jar" />
            <arg value="--configuration=${debug.conf}" />
            <arg value="--dir=${destdir}" />
            <arg value="--jarimport-location=${qtjambi.builddir}/lib/" />
            <env key="DYLD_LIBRARY_PATH" value="${librarypath}" />
            <classpath>
                <fileset dir="${deploymentdir}" includes="qtjambi-${qtjambi.jar.version}.jar,qtjambi-deployer-${qtjambi.jar.version}.jar"/>
            </classpath>
        </java>
		<if>
			<equals arg1="${qtjambi.osname}" arg2="android"/>
			<then>
				<antcall inheritrefs="true" target="createjarimpl2">
					<param name="targetdirname" value="android"/>
					<param name="qtjambi.osname" value="android-arm"/>
				</antcall>
				<antcall inheritrefs="true" target="createjarimpl2">
					<param name="targetdirname" value="android"/>
					<param name="qtjambi.osname" value="android-arm64"/>
				</antcall>
				<antcall inheritrefs="true" target="createjarimpl2">
					<param name="targetdirname" value="android"/>
					<param name="qtjambi.osname" value="android-x86"/>
				</antcall>
				<antcall inheritrefs="true" target="createjarimpl2">
					<param name="targetdirname" value="android"/>
					<param name="qtjambi.osname" value="android-x64"/>
				</antcall>
			</then>
			<else>
				<antcall inheritrefs="true" target="createjarimpl2">
					<param name="targetdirname" value="${qtjambi.osname}"/>
				</antcall>
			</else>
		</if>
    </target>

    <target name="createjarimpl2">
		<property name="qml-subdir" value="${module}"/>
		<stringreplace property="qml-subdir" target="." replacement="/"/>
		<property name="qml-usc" value="${module}"/>
		<stringreplace property="qml-usc" target="." replacement="_"/>
		<property name="moduledot" value="qtjambi.qml.${module}"/>
		<stringreplace property="moduledot" target="-" replacement="."/>
		<property name="moduledash" value="qtjambi-qml-${module}"/>
		<stringreplace property="moduledash" target="." replacement="-"/>
		<if>
			<or>
				<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
			</or>
			<then>
				<if>
					<istrue value="${qtjambi.testbuild}"/>
					<then>
						<mkdir dir="${outputDir}/${targetdirname}/tests"/>
						<mkdir dir="${outputDir}/${targetdirname}/tests/qt-project.org/imports/${qml-subdir}"/>
						<copy todir="${outputDir}/${targetdirname}/tests/qt-project.org/imports/${qml-subdir}">
							  <fileset dir="${outputDir}/${targetdirname}/tests/${subdir}/qml/${qml-subdir}" includes="*" excludes="*.class,*.jar,*.so"/>
						</copy>
						<copy todir="${outputDir}/${targetdirname}/tests/qt-project.org/imports/">
							<zipfileset includes="**" excludes="**/*.class" src="${outputDir}/${targetdirname}/tests/${module}.jar"/>
						</copy>
						<delete dir="${outputDir}/${targetdirname}/tests/qt-project.org/imports/META-INF" failonerror="0"/>
						<jar destfile="${outputDir}/${targetdirname}/tests/${moduledash}-native-android-common-${qtjambi.jar.version}.jar">
							<manifest>
								<attribute name="Built-By" value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
								<attribute name="Bundle-Name"      value="QtJambi ${module}"/>
								<attribute name="Bundle-Description"      value="QtJambi ${module}"/>
								<attribute name="Bundle-License"         value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999"/>
								<attribute name="Bundle-Version"         value="${qtjambi.version.bundle}"/>
								<attribute name="Bundle-ManifestVersion" value="2"/>
							</manifest>
							<zipfileset includes="**/*class" excludes="META-INF" src="${outputDir}/${targetdirname}/tests/${module}.jar"/>
							<fileset dir="${outputDir}/${targetdirname}/tests" includes="qt-project.org/**"/>
						</jar>
						<delete dir="${outputDir}/${targetdirname}/tests/qt-project.org"/>
					</then>
					<else>
						<copy file="${plugindestdir}/qml/${module}.jar" 
							  tofile="${deploymentdir}/${moduledash}-native-android-common-${qtjambi.jar.version}.jar"/>
						<copy file="${outputDir}/qml/${module}-sources.jar" 
							  tofile="${deploymentdir}/${moduledash}-native-android-common-${qtjambi.jar.version}-sources.jar"/>
						<jar destfile="${deploymentdir}/${moduledash}-native-android-common-${qtjambi.jar.version}-javadoc.jar">
							<fileset dir="${deploymentdir}/" includes="*.neverexisting" followsymlinks="false"/>
						</jar>
					</else>
				</if>
			</then>
		</if>
		<if>
			<or>
				<not>
					<istrue value="${qtjambi.testbuild}"/>
				</not>
				<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
				<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
				<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
			</or>
			<then>
				<if>
					<equals arg1="${qtjambi.osname}" arg2="android-arm"/>
					<then>
						<property name="jar-includes" value="lib/armeabi-v7a/libqml_${qml-usc}_jarimport${dbgsuffix}_armeabi-v7a.so"/>
					</then>
					<else>
						<if>
							<equals arg1="${qtjambi.osname}" arg2="android-arm64"/>
							<then>
								<property name="jar-includes" value="lib/arm64-v8a/libqml_${qml-usc}_jarimport${dbgsuffix}_arm64-v8a.so"/>
							</then>
							<else>
								<if>
									<equals arg1="${qtjambi.osname}" arg2="android-x64"/>
									<then>
										<property name="jar-includes" value="lib/x86_64/libqml_${qml-usc}_jarimport${dbgsuffix}_x86_64.so"/>
									</then>
									<else>
										<if>
											<equals arg1="${qtjambi.osname}" arg2="android-x86"/>
											<then>
												<property name="jar-includes" value="lib/x86/libqml_${qml-usc}_jarimport${dbgsuffix}_x86.so"/>
											</then>
											<else>
												<property name="jar-includes" value="qml/${qml-usc}/*,qtjambi-deployment.xml"/>
												<create-native-deployment outputDirectory="${plugindestdir}" debug="${isdebug}" module="${moduledot}" libraries="${qml-subdir}" plugin="true" forcedebuginfo="${qtjambi.force.debug.info}"/>
											</else>
										</if>
									</else>
								</if>
							</else>
						</if>
					</else>
				</if>
				<condition property="qmltargetdir" value="${outputDir}/${targetdirname}/tests" else="${deploymentdir}">
					<istrue value="${qtjambi.testbuild}"/>
				</condition>
				<echo>jar-includes=${qmltargetdir}/${subdir}/${jar-includes}</echo>
				<jar destfile="${qmltargetdir}/${moduledash}-native-${qtjambi.osname}${platformjar.debug.suffix}-${qtjambi.jar.version}.jar">
					<manifest>
						<attribute name="Built-By" value="${qtjambi.user.name} &lt;${qtjambi.user.email}> - ${TODAY}"/>
						<attribute name="Bundle-Name"      value="QtJambi ${module} plugin platform bundle"/>
						<attribute name="Bundle-Description"      value="QtJambi ${module} plugin platform bundle"/>
						<attribute name="Bundle-License"         value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999"/>
						<attribute name="Bundle-Version"         value="${qtjambi.version.bundle}"/>
						<attribute name="Bundle-ManifestVersion" value="2"/>
					</manifest>
					<fileset dir="${qmltargetdir}/${subdir}" includes="${jar-includes}"/>
				</jar>
			</then>
		</if>
    </target>
</project>
